[{"D:\\workspace\\seelescan-frontend\\src\\index.tsx":"1","D:\\workspace\\seelescan-frontend\\src\\reportWebVitals.ts":"2","D:\\workspace\\seelescan-frontend\\src\\App.tsx":"3","D:\\workspace\\seelescan-frontend\\src\\theme\\index.tsx":"4","D:\\workspace\\seelescan-frontend\\src\\routes\\index.tsx":"5","D:\\workspace\\seelescan-frontend\\src\\constants\\index.tsx":"6","D:\\workspace\\seelescan-frontend\\src\\pages\\Home\\index.tsx":"7","D:\\workspace\\seelescan-frontend\\src\\pages\\404\\index.tsx":"8","D:\\workspace\\seelescan-frontend\\src\\components\\Page\\index.tsx":"9","D:\\workspace\\seelescan-frontend\\src\\utils\\screen.ts":"10","D:\\workspace\\seelescan-frontend\\src\\utils\\media.tsx":"11","D:\\workspace\\seelescan-frontend\\src\\components\\Footer\\index.tsx":"12","D:\\workspace\\seelescan-frontend\\src\\components\\AppMenu\\index.tsx":"13","D:\\workspace\\seelescan-frontend\\src\\components\\PageHeader\\index.tsx":"14","D:\\workspace\\seelescan-frontend\\src\\utils\\number.ts":"15","D:\\workspace\\seelescan-frontend\\src\\pages\\Blocks\\index.tsx":"16","D:\\workspace\\seelescan-frontend\\src\\pages\\Transactions\\index.tsx":"17","D:\\workspace\\seelescan-frontend\\src\\lib\\scripts.js":"18","D:\\workspace\\seelescan-frontend\\src\\hooks\\index.js":"19","D:\\workspace\\seelescan-frontend\\src\\components\\BlockTableRow\\index.tsx":"20","D:\\workspace\\seelescan-frontend\\src\\hooks\\useFetch\\useFetch.js":"21","D:\\workspace\\seelescan-frontend\\src\\hooks\\useTimer.js":"22","D:\\workspace\\seelescan-frontend\\src\\hooks\\useFetch\\reducer.js":"23","D:\\workspace\\seelescan-frontend\\src\\pages\\Validators\\index.tsx":"24","D:\\workspace\\seelescan-frontend\\src\\components\\ValidatorTableRow\\index.tsx":"25","D:\\workspace\\seelescan-frontend\\src\\pages\\Validator\\index.tsx":"26","D:\\workspace\\seelescan-frontend\\src\\pages\\Proposals\\index.tsx":"27","D:\\workspace\\seelescan-frontend\\src\\components\\ProposalTableRow\\index.tsx":"28","D:\\workspace\\seelescan-frontend\\src\\pages\\Proposal\\index.tsx":"29","D:\\workspace\\seelescan-frontend\\src\\pages\\SearchFail\\index.tsx":"30","D:\\workspace\\seelescan-frontend\\src\\utils\\string.ts":"31","D:\\workspace\\seelescan-frontend\\src\\pages\\Block\\index.tsx":"32","D:\\workspace\\seelescan-frontend\\src\\pages\\Transaction\\index.tsx":"33","D:\\workspace\\seelescan-frontend\\src\\pages\\Parameter\\index.tsx":"34","D:\\workspace\\seelescan-frontend\\src\\components\\TransactionTableRow\\index.tsx":"35","D:\\workspace\\seelescan-frontend\\src\\utils\\i18n.ts":"36","D:\\workspace\\seelescan-frontend\\src\\utils\\cache.ts":"37","D:\\workspace\\seelescan-frontend\\src\\utils\\date.ts":"38","D:\\其他\\seelescan-frontend\\src\\index.tsx":"39","D:\\其他\\seelescan-frontend\\src\\reportWebVitals.ts":"40","D:\\其他\\seelescan-frontend\\src\\utils\\i18n.ts":"41","D:\\其他\\seelescan-frontend\\src\\App.tsx":"42","D:\\其他\\seelescan-frontend\\src\\utils\\cache.ts":"43","D:\\其他\\seelescan-frontend\\src\\utils\\media.tsx":"44","D:\\其他\\seelescan-frontend\\src\\utils\\date.ts":"45","D:\\其他\\seelescan-frontend\\src\\theme\\index.tsx":"46","D:\\其他\\seelescan-frontend\\src\\routes\\index.tsx":"47","D:\\其他\\seelescan-frontend\\src\\constants\\index.tsx":"48","D:\\其他\\seelescan-frontend\\src\\components\\Footer\\index.tsx":"49","D:\\其他\\seelescan-frontend\\src\\pages\\Block\\index.tsx":"50","D:\\其他\\seelescan-frontend\\src\\pages\\Blocks\\index.tsx":"51","D:\\其他\\seelescan-frontend\\src\\components\\Page\\index.tsx":"52","D:\\其他\\seelescan-frontend\\src\\pages\\Transactions\\index.tsx":"53","D:\\其他\\seelescan-frontend\\src\\pages\\Home\\index.tsx":"54","D:\\其他\\seelescan-frontend\\src\\pages\\Transaction\\index.tsx":"55","D:\\其他\\seelescan-frontend\\src\\pages\\Validators\\index.tsx":"56","D:\\其他\\seelescan-frontend\\src\\pages\\Proposals\\index.tsx":"57","D:\\其他\\seelescan-frontend\\src\\pages\\Validator\\index.tsx":"58","D:\\其他\\seelescan-frontend\\src\\pages\\Proposal\\index.tsx":"59","D:\\其他\\seelescan-frontend\\src\\pages\\404\\index.tsx":"60","D:\\其他\\seelescan-frontend\\src\\pages\\Parameter\\index.tsx":"61","D:\\其他\\seelescan-frontend\\src\\pages\\SearchFail\\index.tsx":"62","D:\\其他\\seelescan-frontend\\src\\lib\\scripts.js":"63","D:\\其他\\seelescan-frontend\\src\\utils\\number.ts":"64","D:\\其他\\seelescan-frontend\\src\\hooks\\index.js":"65","D:\\其他\\seelescan-frontend\\src\\components\\TransactionTableRow\\index.tsx":"66","D:\\其他\\seelescan-frontend\\src\\components\\AppMenu\\index.tsx":"67","D:\\其他\\seelescan-frontend\\src\\components\\BlockTableRow\\index.tsx":"68","D:\\其他\\seelescan-frontend\\src\\components\\PageHeader\\index.tsx":"69","D:\\其他\\seelescan-frontend\\src\\components\\ValidatorTableRow\\index.tsx":"70","D:\\其他\\seelescan-frontend\\src\\components\\ProposalTableRow\\index.tsx":"71","D:\\其他\\seelescan-frontend\\src\\hooks\\useTimer.js":"72","D:\\其他\\seelescan-frontend\\src\\hooks\\useFetch\\useFetch.js":"73","D:\\其他\\seelescan-frontend\\src\\utils\\screen.ts":"74","D:\\其他\\seelescan-frontend\\src\\utils\\string.ts":"75","D:\\其他\\seelescan-frontend\\src\\hooks\\useFetch\\reducer.js":"76","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\index.tsx":"77","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\reportWebVitals.ts":"78","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\i18n.ts":"79","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\App.tsx":"80","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\cache.ts":"81","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\media.tsx":"82","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\date.ts":"83","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\routes\\index.tsx":"84","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\theme\\index.tsx":"85","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\constants\\index.tsx":"86","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Validators\\index.tsx":"87","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Transaction\\index.tsx":"88","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Validator\\index.tsx":"89","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Transactions\\index.tsx":"90","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Proposals\\index.tsx":"91","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\404\\index.tsx":"92","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Footer\\index.tsx":"93","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Page\\index.tsx":"94","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\lib\\scripts.js":"95","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\number.ts":"96","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\index.js":"97","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\BlockTableRow\\index.tsx":"98","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TransactionTableRow\\index.tsx":"99","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\ValidatorTableRow\\index.tsx":"100","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\ProposalTableRow\\index.tsx":"101","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\PageHeader\\index.tsx":"102","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\AppMenu\\index.tsx":"103","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useTimer.js":"104","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useFetch\\useFetch.js":"105","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\screen.ts":"106","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\string.ts":"107","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useFetch\\reducer.js":"108","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Welcome\\index.tsx":"109","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TopBar\\index.tsx":"110","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Dial\\index.tsx":"111","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Spacer\\index.tsx":"112","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep1\\index.tsx":"113","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep2\\index.tsx":"114","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep3\\index.tsx":"115","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep4\\index.tsx":"116","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\SideBar\\index.tsx":"117","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TopMenu\\index.tsx":"118","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\PageApp\\index.tsx":"119","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\AppTopBar\\index.tsx":"120","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Bridge\\index.tsx":"121","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Stake\\index.tsx":"122","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Governance\\index.tsx":"123","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Apps\\index.tsx":"124","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Home\\index.tsx":"125","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Setting\\index.tsx":"126","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Proposal\\index.tsx":"127"},{"size":584,"mtime":1616937315339,"results":"128","hashOfConfig":"129"},{"size":425,"mtime":1612180327801,"results":"130","hashOfConfig":"129"},{"size":631,"mtime":1612847012925,"results":"131","hashOfConfig":"129"},{"size":215,"mtime":1612332239455,"results":"132","hashOfConfig":"129"},{"size":3059,"mtime":1616065062342,"results":"133","hashOfConfig":"129"},{"size":1246,"mtime":1616058327789,"results":"134","hashOfConfig":"129"},{"size":10310,"mtime":1616911527290,"results":"135","hashOfConfig":"129"},{"size":123,"mtime":1612347412477,"results":"136","hashOfConfig":"129"},{"size":2882,"mtime":1616936400658,"results":"137","hashOfConfig":"129"},{"size":687,"mtime":1612268727968,"results":"138","hashOfConfig":"129"},{"size":401,"mtime":1612847012937,"results":"139","hashOfConfig":"129"},{"size":913,"mtime":1616855078671,"results":"140","hashOfConfig":"129"},{"size":3846,"mtime":1616068929659,"results":"141","hashOfConfig":"129"},{"size":1962,"mtime":1616067836210,"results":"142","hashOfConfig":"129"},{"size":3366,"mtime":1613737134547,"results":"143","hashOfConfig":"129"},{"size":2810,"mtime":1616820531647,"results":"144","hashOfConfig":"129"},{"size":2797,"mtime":1616833052090,"results":"145","hashOfConfig":"129"},{"size":5780,"mtime":1614755132761,"results":"146","hashOfConfig":"129"},{"size":122,"mtime":1614770142974,"results":"147","hashOfConfig":"129"},{"size":1490,"mtime":1615545224036,"results":"148","hashOfConfig":"129"},{"size":1523,"mtime":1614855383660,"results":"149","hashOfConfig":"129"},{"size":397,"mtime":1614769872352,"results":"150","hashOfConfig":"129"},{"size":749,"mtime":1614754597983,"results":"151","hashOfConfig":"129"},{"size":1772,"mtime":1614999884907,"results":"152","hashOfConfig":"129"},{"size":1280,"mtime":1616927054443,"results":"153","hashOfConfig":"129"},{"size":5891,"mtime":1616930327811,"results":"154","hashOfConfig":"129"},{"size":1873,"mtime":1615351543304,"results":"155","hashOfConfig":"129"},{"size":2118,"mtime":1615369656057,"results":"156","hashOfConfig":"129"},{"size":6519,"mtime":1616043987495,"results":"157","hashOfConfig":"129"},{"size":972,"mtime":1615546468316,"results":"158","hashOfConfig":"129"},{"size":5491,"mtime":1615538368637,"results":"159","hashOfConfig":"129"},{"size":6114,"mtime":1616839174756,"results":"160","hashOfConfig":"129"},{"size":4821,"mtime":1616905922103,"results":"161","hashOfConfig":"129"},{"size":8112,"mtime":1616933789437,"results":"162","hashOfConfig":"129"},{"size":1461,"mtime":1616820051782,"results":"163","hashOfConfig":"129"},{"size":800,"mtime":1616937235834,"results":"164","hashOfConfig":"129"},{"size":2324,"mtime":1611928386000,"results":"165","hashOfConfig":"129"},{"size":3009,"mtime":1611928386000,"results":"166","hashOfConfig":"129"},{"size":584,"mtime":1616937315339,"results":"167","hashOfConfig":"168"},{"size":425,"mtime":1612180327801,"results":"169","hashOfConfig":"168"},{"size":953,"mtime":1616939412062,"results":"170","hashOfConfig":"168"},{"size":631,"mtime":1612847012925,"results":"171","hashOfConfig":"168"},{"size":2324,"mtime":1611928386000,"results":"172","hashOfConfig":"168"},{"size":401,"mtime":1612847012937,"results":"173","hashOfConfig":"168"},{"size":3009,"mtime":1611928386000,"results":"174","hashOfConfig":"168"},{"size":215,"mtime":1612332239455,"results":"175","hashOfConfig":"168"},{"size":3059,"mtime":1616065062342,"results":"176","hashOfConfig":"168"},{"size":1254,"mtime":1617032324072,"results":"177","hashOfConfig":"168"},{"size":913,"mtime":1616855078671,"results":"178","hashOfConfig":"168"},{"size":6471,"mtime":1617012564328,"results":"179","hashOfConfig":"168"},{"size":3022,"mtime":1616997861202,"results":"180","hashOfConfig":"168"},{"size":2882,"mtime":1616936400658,"results":"181","hashOfConfig":"168"},{"size":3017,"mtime":1616999961490,"results":"182","hashOfConfig":"168"},{"size":10903,"mtime":1617014224479,"results":"183","hashOfConfig":"168"},{"size":5180,"mtime":1617013569088,"results":"184","hashOfConfig":"168"},{"size":1955,"mtime":1616998928060,"results":"185","hashOfConfig":"168"},{"size":2126,"mtime":1617011089986,"results":"186","hashOfConfig":"168"},{"size":6260,"mtime":1617012028493,"results":"187","hashOfConfig":"168"},{"size":6519,"mtime":1616043987495,"results":"188","hashOfConfig":"168"},{"size":123,"mtime":1612347412477,"results":"189","hashOfConfig":"168"},{"size":8687,"mtime":1617071621373,"results":"190","hashOfConfig":"168"},{"size":972,"mtime":1615546468316,"results":"191","hashOfConfig":"168"},{"size":5780,"mtime":1614755132761,"results":"192","hashOfConfig":"168"},{"size":3366,"mtime":1613737134547,"results":"193","hashOfConfig":"168"},{"size":122,"mtime":1614770142974,"results":"194","hashOfConfig":"168"},{"size":1461,"mtime":1616820051782,"results":"195","hashOfConfig":"168"},{"size":4369,"mtime":1617013782159,"results":"196","hashOfConfig":"168"},{"size":1492,"mtime":1616996817934,"results":"197","hashOfConfig":"168"},{"size":2115,"mtime":1616943599742,"results":"198","hashOfConfig":"168"},{"size":1280,"mtime":1616927054443,"results":"199","hashOfConfig":"168"},{"size":2118,"mtime":1615369656057,"results":"200","hashOfConfig":"168"},{"size":397,"mtime":1614769872352,"results":"201","hashOfConfig":"168"},{"size":1595,"mtime":1617028623295,"results":"202","hashOfConfig":"168"},{"size":687,"mtime":1612268727968,"results":"203","hashOfConfig":"168"},{"size":5491,"mtime":1615538368637,"results":"204","hashOfConfig":"168"},{"size":749,"mtime":1614754597983,"results":"205","hashOfConfig":"168"},{"size":584,"mtime":1617190796101,"results":"206","hashOfConfig":"207"},{"size":440,"mtime":1617190796110,"results":"208","hashOfConfig":"207"},{"size":996,"mtime":1617190796113,"results":"209","hashOfConfig":"207"},{"size":631,"mtime":1617190796092,"results":"210","hashOfConfig":"207"},{"size":2395,"mtime":1617190796112,"results":"211","hashOfConfig":"207"},{"size":401,"mtime":1617190796113,"results":"212","hashOfConfig":"207"},{"size":3097,"mtime":1617190796113,"results":"213","hashOfConfig":"207"},{"size":5135,"mtime":1619178237060,"results":"214","hashOfConfig":"207"},{"size":367,"mtime":1618316766425,"results":"215","hashOfConfig":"207"},{"size":1291,"mtime":1617190796099,"results":"216","hashOfConfig":"207"},{"size":3193,"mtime":1620989592789,"results":"217","hashOfConfig":"207"},{"size":5180,"mtime":1617190796109,"results":"218","hashOfConfig":"207"},{"size":6260,"mtime":1617190796110,"results":"219","hashOfConfig":"207"},{"size":3017,"mtime":1617190796109,"results":"220","hashOfConfig":"207"},{"size":2126,"mtime":1617190796108,"results":"221","hashOfConfig":"207"},{"size":132,"mtime":1617190796103,"results":"222","hashOfConfig":"207"},{"size":1950,"mtime":1618314340934,"results":"223","hashOfConfig":"207"},{"size":1437,"mtime":1618569872535,"results":"224","hashOfConfig":"207"},{"size":5780,"mtime":1617190796101,"results":"225","hashOfConfig":"207"},{"size":3366,"mtime":1617190796113,"results":"226","hashOfConfig":"207"},{"size":122,"mtime":1617190796100,"results":"227","hashOfConfig":"207"},{"size":1492,"mtime":1617190796095,"results":"228","hashOfConfig":"207"},{"size":1461,"mtime":1617190796098,"results":"229","hashOfConfig":"207"},{"size":1600,"mtime":1619161101546,"results":"230","hashOfConfig":"207"},{"size":2118,"mtime":1617190796097,"results":"231","hashOfConfig":"207"},{"size":2115,"mtime":1617190796097,"results":"232","hashOfConfig":"207"},{"size":7388,"mtime":1620988865894,"results":"233","hashOfConfig":"207"},{"size":397,"mtime":1617190796100,"results":"234","hashOfConfig":"207"},{"size":1595,"mtime":1617190796100,"results":"235","hashOfConfig":"207"},{"size":709,"mtime":1617190796114,"results":"236","hashOfConfig":"207"},{"size":5491,"mtime":1617190796115,"results":"237","hashOfConfig":"207"},{"size":749,"mtime":1617190796100,"results":"238","hashOfConfig":"207"},{"size":3012,"mtime":1618573289256,"results":"239","hashOfConfig":"207"},{"size":790,"mtime":1618560130943,"results":"240","hashOfConfig":"207"},{"size":1564,"mtime":1618309891969,"results":"241","hashOfConfig":"207"},{"size":737,"mtime":1618316769821,"results":"242","hashOfConfig":"207"},{"size":3696,"mtime":1618394800992,"results":"243","hashOfConfig":"207"},{"size":8143,"mtime":1618471434913,"results":"244","hashOfConfig":"207"},{"size":11948,"mtime":1618472353106,"results":"245","hashOfConfig":"207"},{"size":2377,"mtime":1618473698966,"results":"246","hashOfConfig":"207"},{"size":1011,"mtime":1618569268676,"results":"247","hashOfConfig":"207"},{"size":3280,"mtime":1618554697042,"results":"248","hashOfConfig":"207"},{"size":1746,"mtime":1620988273379,"results":"249","hashOfConfig":"207"},{"size":2695,"mtime":1620988123910,"results":"250","hashOfConfig":"207"},{"size":9187,"mtime":1620989547539,"results":"251","hashOfConfig":"207"},{"size":2691,"mtime":1620989483847,"results":"252","hashOfConfig":"207"},{"size":3140,"mtime":1620989516347,"results":"253","hashOfConfig":"207"},{"size":4125,"mtime":1620989616443,"results":"254","hashOfConfig":"207"},{"size":4606,"mtime":1620989226866,"results":"255","hashOfConfig":"207"},{"size":4083,"mtime":1620989631731,"results":"256","hashOfConfig":"207"},{"size":5696,"mtime":1619181554647,"results":"257","hashOfConfig":"207"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"122ocyg",{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"262"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"262"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"262"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"262"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"262"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"262"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"262"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"301"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"301"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"262"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"262"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"262"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"262"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"262"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"262"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},"15vv9to",{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"353"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"353"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"353"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"353"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"353"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"353"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"353"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"353"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"353"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"353"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"353"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"353"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"353"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"353"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"353"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"353"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"353"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"353"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"353"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"353"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"353"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"414"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"353"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"445"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},"16ksu5s",{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"448"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"448"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"448"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"448"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"479"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"448"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"448"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"448"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"479"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"448"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"448"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"448"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"479"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"491"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"491"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"448"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"491"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"448"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"448"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"448"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"448"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"448"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"448"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"448"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"448"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"448"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"448"},"D:\\workspace\\seelescan-frontend\\src\\index.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\reportWebVitals.ts",[],["576","577"],"D:\\workspace\\seelescan-frontend\\src\\App.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\theme\\index.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\routes\\index.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\constants\\index.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\pages\\Home\\index.tsx",["578","579"],"D:\\workspace\\seelescan-frontend\\src\\pages\\404\\index.tsx",["580"],"import React from 'react'\n\nconst Title: React.FC = () => {\n  return <div />\n}\n\nexport default () => {\n  return <Title />\n}\n","D:\\workspace\\seelescan-frontend\\src\\components\\Page\\index.tsx",["581","582"],"D:\\workspace\\seelescan-frontend\\src\\utils\\screen.ts",["583"],"export const isMobile = (width?: number) => (width || window.innerWidth) <= 750\n\nexport const isSmallMobile = () => window.innerWidth < 375\n\nexport const isMediumMobile = () => window.innerWidth >= 375 && window.innerWidth < 414\n\nexport const isLargeMobile = () => window.innerWidth >= 414 && window.innerWidth <= 750\n\nexport const isScreen750to1440 = () => window.innerWidth >= 750 && window.innerWidth < 1440\n\nexport const isScreenSmallerThan1200 = () => window.innerWidth <= 1200\n\nexport const isScreenSmallerThan1440 = () => window.innerWidth <= 1440\n\nexport default {\n  isMobile,\n  isSmallMobile,\n  isMediumMobile,\n  isLargeMobile,\n  isScreen750to1440,\n  isScreenSmallerThan1200,\n}\n","D:\\workspace\\seelescan-frontend\\src\\utils\\media.tsx",[],"D:\\workspace\\seelescan-frontend\\src\\components\\Footer\\index.tsx",["584","585"],"D:\\workspace\\seelescan-frontend\\src\\components\\AppMenu\\index.tsx",["586","587"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Menu,Image, Container, Dropdown,MenuItemProps,DropdownItemProps,Label} from 'semantic-ui-react'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport {Media} from '../../utils/media'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\n\r\nconst AppMenu: React.FC = () => {\r\n    const [activeItem,setActiveItem] = useState('home')\r\n    const handleItemClick = (e:any, {name}:MenuItemProps) => {setActiveItem(name)}\r\n    const handleDropdownItemClick = (e:any, {value}:DropdownItemProps) => {setActiveItem(value.toString())}\r\n    return (\r\n        <Container>\r\n            {!isMobile() && (\r\n                <Menu.Item as={Link} to='/' header\r\n                    onClick = {()=>{setActiveItem('home')}}\r\n                >\r\n                    <Image size='tiny' src={logo} style={{ marginRight: '0.5em' }} />\r\n                    <Label color='teal' floating>\r\n                        testnet\r\n                    </Label>\r\n\r\n                </Menu.Item>\r\n            )\r\n            }\r\n\r\n            <Menu.Item\r\n                as={Link}\r\n                name='home'\r\n                active={activeItem === 'home'}\r\n                to='/'\r\n                onClick = {handleItemClick}\r\n            />\r\n            <Dropdown item simple  text='Blockchain'>\r\n                <Dropdown.Menu direction='left'>\r\n                    <Dropdown.Item as={Link} to='/blocks' value='blocks' onClick = {handleDropdownItemClick} >区块</Dropdown.Item>\r\n                    <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick}>交易</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Menu.Item\r\n                as={Link}\r\n                name='validators'\r\n                active={activeItem === 'validators'}\r\n                to='/validators'\r\n                onClick = {handleItemClick}\r\n            />\r\n            \r\n            <Dropdown item simple  text='Governance'>\r\n                <Dropdown.Menu direction='left'>\r\n                    <Dropdown.Item as={Link} to='/proposals' value='proposals' onClick = {handleDropdownItemClick} >民主提案</Dropdown.Item>\r\n                    <Dropdown.Item as={Link} to='/parameter' value='parameter' onClick = {handleDropdownItemClick} >系统参数</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {!isMobile() && (\r\n                        <Menu.Item position='right'>\r\n                            <Dropdown item simple  text='Language'>\r\n                                <Dropdown.Menu direction='left'>\r\n                                    <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick} >English</Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick} >中文</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Item>\r\n                )\r\n            }\r\n            {isMobile() && (\r\n                <Dropdown item simple text='Language'>\r\n                    <Dropdown.Menu direction='left'>\r\n                        <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick}>English</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick} >中文</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppMenu","D:\\workspace\\seelescan-frontend\\src\\components\\PageHeader\\index.tsx",["588","589","590","591","592","593","594"],"import React,{useRef,useState} from 'react'\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Icon,\r\n  Input,\r\n  InputOnChangeData,\r\n} from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport { HeaderEmptyPanel } from './styled'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { addPrefixForHash, containSpecialChar } from '../../utils/string'\r\nimport {stringNumCheck} from \"../../lib/scripts\";;\r\n\r\nconst PageHeader = ({mobile}:{mobile?:boolean}) => {\r\n\r\n  const history = useHistory()\r\n  const [searchValue,setSearchValue] = useState('')\r\n  const handleSearch = () => {\r\n    const query = searchValue.trim().replace(',', '')\r\n    if (!query || containSpecialChar(query)) {\r\n      history.push(`/searchfail?q=${query}`)\r\n      return\r\n    }else if (stringNumCheck(searchValue)){\r\n      history.push(`/block/${query}`)\r\n    }else if (searchValue.startsWith(\"seele\")){\r\n      history.push(`/account/${query}`)\r\n    }else if (searchValue.length === 64){\r\n      history.push(`/tx/${query}`)\r\n    }else {\r\n      history.push(`/searchfail?q=${query}`)\r\n      return\r\n    }\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const onInpuChange = (e: any,data: InputOnChangeData) => {setSearchValue(data.value)}\r\n  \r\n  return (\r\n    <Container text>\r\n    <Header\r\n      as='h1'\r\n      content='Seele Scan'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '2.5em' : '3.5em',\r\n        fontWeight: 'normal',\r\n        marginBottom: 0,\r\n        marginTop: mobile ? '0.2em' : '0.5em',\r\n      }}\r\n    />\r\n\r\n    <Input value={searchValue} fluid icon='search' iconPosition='left' placeholder='Search by block,transaction,address...' \r\n      onChange= {onInpuChange}\r\n      action={{\r\n        color: 'blue',\r\n        content: 'Search',\r\n        onClick: ()=>{handleSearch()},\r\n        }}  />\r\n\r\n  </Container>\r\n  )\r\n}\r\n\r\nPageHeader.propTypes = {\r\n  mobile: PropTypes.bool,\r\n}\r\n\r\nexport default PageHeader\r\n","D:\\workspace\\seelescan-frontend\\src\\utils\\number.ts",[],"D:\\workspace\\seelescan-frontend\\src\\pages\\Blocks\\index.tsx",["595","596","597","598","599","600","601"],"import React from 'react'\nimport {\n  Container,\n  Segment,\n  Grid,\n  Header,\n  List,\n  Image,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  PaginationProps,\n} from 'semantic-ui-react'\nimport {useFetch, useTimer} from \"../../hooks\";\nimport constants from \"../../constants\";\nimport BlockTableRow from \"../../components/BlockTableRow\";\nimport {_,empty} from \"../../lib/scripts\";\n\nconst PAGE_SIZE:number = 20;\nvar   blockbefore = 0\n\nconst Blocks: React.FC = () => {\n  \n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.BLOCKLIST}?limit=${PAGE_SIZE}&before=${blockbefore}`, \"get\");\n\n\tReact.useEffect(() => {\n\t\trequestFetch();\n\t}, [requestFetch]);\n\n  const tableBodyRender = React.useMemo(\n\t\t() => (\n\t\t\t<>\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Blocks, (v:any, i:any) => (\n\t\t\t\t\t<BlockTableRow blockData={v} />\n\t\t\t\t))}\n\t\t\t</>\n\t\t),\n\t\t[data]\n\t);\n\n  const handlePageChange = (e:any, {activePage}:PaginationProps) => {\n    console.log(activePage)\n  }\n\n  const paginationRender = React.useMemo(\n\t\t() => (\n\t\t\t<Pagination\n            defaultActivePage={1}\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\n            totalPages={Math.ceil(data?.data?.Data?.Total/PAGE_SIZE)}\n            onPageChange={(e:any, {activePage}:PaginationProps) =>{\n              blockbefore = data?.data?.Data?.Total-(Number(activePage)-1)*PAGE_SIZE + 1\n              setUrl(`${constants.API_BASE}${constants.API.BLOCKLIST}?limit=${PAGE_SIZE}&before=${blockbefore}`);\n            }}\n            />\n\t\t),\n\t\t[data]\n\t);\n\n\n  return (\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\n      <Header as='h3' >BLOCKS</Header>\n      <Segment raised>\n        <Table striped  unstackable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Height</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Proposer</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Txs</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Time</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{tableBodyRender}</Table.Body>\n        </Table>\n      </Segment>\n      <Segment vertical textAlign='right'>\n        <>\n          {paginationRender}\n        </>\n        </Segment>\n    </Container>\n  )\n}\n\nexport default Blocks\n","D:\\workspace\\seelescan-frontend\\src\\pages\\Transactions\\index.tsx",["602","603","604","605","606","607"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n} from 'semantic-ui-react'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport TransactionTableRow from \"../../components/TransactionTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   txbefore = 0\r\n\r\nconst Transactions: React.FC = () => {\r\n\r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.TRANSACTIONS}?limit=${PAGE_SIZE}&before=${txbefore}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Txs, (v:any, i:any) => (\r\n\t\t\t\t\t<TransactionTableRow txData={v} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  const paginationRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<Pagination\r\n            defaultActivePage={1}\r\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\r\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\r\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\r\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\r\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\r\n            totalPages={Math.ceil(data?.data?.Data?.Total/PAGE_SIZE)}\r\n            onPageChange={(e:any, {activePage}:PaginationProps) =>{\r\n              txbefore = data?.data?.Data?.Total-(Number(activePage)-1)*PAGE_SIZE + 1\r\n              setUrl(`${constants.API_BASE}${constants.API.TRANSACTIONS}?limit=${PAGE_SIZE}&before=${txbefore}`);\r\n            }}\r\n            />\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >TRANSACTIONS </Header>\r\n      <Segment raised>\r\n      <Table striped  unstackable>\r\n        <Table.Header>\r\n            <Table.Row>\r\n            <Table.HeaderCell style={{ fontSize: '1.12em' }}>Tx hash</Table.HeaderCell>\r\n            <Table.HeaderCell style={{ fontSize: '1.12em' }}>Type</Table.HeaderCell>\r\n            <Table.HeaderCell style={{ fontSize: '1.12em' }}>Height</Table.HeaderCell>\r\n            <Table.HeaderCell style={{ fontSize: '1.12em' }}>Time</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n      <Segment vertical textAlign='right'>\r\n        <>\r\n          {paginationRender}\r\n        </>\r\n        </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Transactions","D:\\workspace\\seelescan-frontend\\src\\lib\\scripts.js",[],["608","609"],"D:\\workspace\\seelescan-frontend\\src\\hooks\\index.js",[],"D:\\workspace\\seelescan-frontend\\src\\components\\BlockTableRow\\index.tsx",["610"],"import React,{useState} from 'react'\r\nimport {\r\n    Table,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  import {setAgoTime} from \"../../lib/scripts\";\r\n interface  BlockTableRowProps{\r\n    blockData:any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst BlockTableRow: React.FC<BlockTableRowProps> = ({blockData}) => {\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell >{blockData.height ? (\r\n                <StyledLink  to={`/block/${blockData.height}`}>\r\n                    {blockData.height}\r\n                </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"40px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell >{blockData.moniker ? (\r\n                  <StyledLink  to={`/validator/${blockData.proposer}`}>\r\n                    {blockData.moniker}\r\n                  </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"80px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{blockData.height ? blockData.num_txs ? blockData.num_txs : \"0\" : <Skeleton width={\"40px\"}/>}</Table.Cell>\r\n            <Table.Cell>{blockData.timestamp ? <>{setAgoTime(blockData.timestamp)}</> : <Skeleton width={\"80px\"}/>}</Table.Cell>\r\n          </Table.Row>\r\n    )\r\n}\r\n\r\nexport default BlockTableRow","D:\\workspace\\seelescan-frontend\\src\\hooks\\useFetch\\useFetch.js",[],"D:\\workspace\\seelescan-frontend\\src\\hooks\\useTimer.js",["611"],"import {useEffect, useState} from \"react\";\r\n\r\nexport default function(watch, ms) {\r\n\tconst [ticker, setTicker] = useState(0);\r\n\tconst [watcher, setWatch] = useState(watch);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(watcher, ms);\r\n\t\tlet interval = setInterval(() => setTicker(v => v + 1), ms);\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [ms]);\r\n\treturn [watcher ? ticker : undefined, setWatch];\r\n}","D:\\workspace\\seelescan-frontend\\src\\hooks\\useFetch\\reducer.js",["612"],"export const initialState = {\r\n\tdata: null,\r\n\terror: false,\r\n\tloading: false,\r\n\terrorMessage: \"\",\r\n};\r\n\r\nexport const INIT = \"INIT\";\r\nexport const FETCHING = \"FETCHING\";\r\nexport const SUCCESS = \"SUCCESS\";\r\nexport const ERROR = \"ERROR\";\r\n\r\nexport default function(state, action) {\r\n\t// console.log(\"fetchREDUCER\", action.type);\r\n\tswitch (action.type) {\r\n\t\tcase INIT: {\r\n\t\t\treturn {...initialState};\r\n\t\t}\r\n\t\tcase FETCHING: {\r\n\t\t\treturn {...state, loading: true, error: false};\r\n\t\t}\r\n\t\tcase SUCCESS: {\r\n\t\t\treturn {...state, loading: false, error: false, data: action.payload.data};\r\n\t\t}\r\n\t\tcase ERROR: {\r\n\t\t\treturn {...state, loading: false, error: true, data: null, errorMessage: action.payload.errorMessage};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","D:\\workspace\\seelescan-frontend\\src\\pages\\Validators\\index.tsx",["613","614","615","616","617","618","619","620","621","622"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n} from 'semantic-ui-react'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\nconst Validators: React.FC = () => {\r\n  \r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.VALIDATORS}?limit=125`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Validators, (v:any, i:any) => (\r\n          <ValidatorTableRow index={i+1} data={v}/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >Validators</Header>\r\n      <Segment raised>\r\n        <Table striped  unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Rank</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Validator</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Voting Power</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Fee</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Validators","D:\\workspace\\seelescan-frontend\\src\\components\\ValidatorTableRow\\index.tsx",["623"],"D:\\workspace\\seelescan-frontend\\src\\pages\\Validator\\index.tsx",["624","625","626","627","628","629","630","631","632"],"D:\\workspace\\seelescan-frontend\\src\\pages\\Proposals\\index.tsx",["633","634","635","636","637","638"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport {useFetch} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ProposalTableRow from \"../../components/ProposalTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nconst PAGE_SIZE:number = 20;\r\n\r\nconst Proposals: React.FC = () => {\r\n  \r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.PROPOSALS}?limit=125`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Proposals, (v:any, i:any) => (\r\n          <ProposalTableRow data={v}/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >Proposals</Header>\r\n      <Segment raised>\r\n        <Table striped  unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>ID</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Title</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Status</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Voting Start</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Submit Time</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>Total Deposit</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposals","D:\\workspace\\seelescan-frontend\\src\\components\\ProposalTableRow\\index.tsx",["639","640"],"import React from 'react'\r\nimport {\r\n    Table,\r\n    Icon,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  import {_} from \"../../lib/scripts\";\r\n\r\n  interface  ProposalTableRowProps{\r\n    data:any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst colors = ['#049ECD', '#f3fc76', '#76c0fc', '#00ff00', '#ff0000']\r\n\r\nfunction sumTotalDeposit(arr:any){\r\n    let sum:number = 0\r\n    for(let j = 0,len=arr.length; j < len; j++) {\r\n        sum += Number(arr[j].amount)\r\n    }\r\n    return sum\r\n}\r\n\r\nfunction getStatus(status:number){\r\n    let ret:string = \"Unknown\"\r\n    switch(status)\r\n    {\r\n        case 1:\r\n            ret = \"DepositPeriod\"\r\n            break;\r\n        case 2:\r\n            ret = \"VotingPeriod\"\r\n            break;\r\n        case 3:\r\n            ret = \"Passed\"\r\n            break;\r\n        case 4:\r\n            ret = \"Rejected\"\r\n            break;\r\n    }\r\n    return (\r\n        <>\r\n        <Icon name='circle'  size='tiny' style={{ color: colors[status]}}/> {ret}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProposalTableRow: React.FC<ProposalTableRowProps> = ({data}) => {\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell >{data.id ? data.id: <Skeleton />}</Table.Cell>\r\n\r\n            <Table.Cell >{data.title ? (\r\n                  <StyledLink  to={`/proposal/${data.id}`}>\r\n                    {data.title}\r\n                  </StyledLink>\r\n                ) : (\r\n                    <Skeleton />\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{data.status ? getStatus(data.status) : <Skeleton />}</Table.Cell>\r\n            <Table.Cell>{data.voting_start_time ? <>{data.voting_start_time}</> : <Skeleton />}</Table.Cell>\r\n            <Table.Cell>{data.submit_time ? <>{data.submit_time}</> : <Skeleton />}</Table.Cell>\r\n            <Table.Cell>{data.total_deposit? <>{data.total_deposit}</> : <Skeleton />}</Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ProposalTableRow","D:\\workspace\\seelescan-frontend\\src\\pages\\Proposal\\index.tsx",["641","642","643","644","645","646","647","648","649","650","651"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\ninterface RouteParams {\r\n    id: string;\r\n  }\r\n\r\nconst Proposal: React.FC = () => {\r\n  const params = useParams<RouteParams>();\r\n  const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.PROPOSAL}/${params.id}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const ProposalContentRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t<Segment.Group raised>\r\n                <Segment>\r\n                    <Header as='h3' >Block Data</Header>\r\n                </Segment>\r\n\r\n                <Segment>\r\n                    <Grid stackable columns={2} verticalAlign='top'>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                                <Header as='h4'>Proposer</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' style={{  paddingTop: '0.2em' }}>\r\n                                <Header as='h5'>Seele-Fund</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Total Deposit</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>768</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Voting Start</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>2021-03-03</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Voting End</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>2021-03-03</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Type</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>SoftwareUpgrade</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Submit Time</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>2021-03-01 15:32:12</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Deposit End Time</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>2021-03-01 15:32:12</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='top'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>Details</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <p>Summary: Tendermint (https://tendermint.com) and B-Harvest (https://bharvest.io) have joined forces to produce and develop a Liquidity Module (https://github.com/tendermint/liquidity). This signal proposal is a Request For Comment to the ATOM community regarding the addition of this Liquidity Module into the Cosmos Hub source code.\r\n\r\nBy voting YES to this proposal, you will signal that you approve of having a DEX based on this specific Liquidity Module deployed on the Cosmos Hub.</p>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n                </Segment.Group>\r\n\r\n                <Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >Votes</Header>\r\n                    </Segment>\r\n\r\n                    <Segment>\r\n                        <Table striped  unstackable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>YES(1145)</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>NO(18)</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>NOWITHVETO(2)</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>ABSTAIN(23)</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                        </Table>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h2' >Proposal Details</Header>\r\n      {ProposalContentRender}\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposal","D:\\workspace\\seelescan-frontend\\src\\pages\\SearchFail\\index.tsx",["652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Label,\r\n} from 'semantic-ui-react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\ninterface RouteParams {\r\n    address: string;\r\n  }\r\n\r\nconst SearchFail: React.FC = () => {\r\n  \r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >Search Fail</Header>\r\n\r\n      <Segment textAlign='center'>\r\n      <p>哎呀！搜索失败了。</p>\r\n\r\n      <p>请确保输入以下选项中的一个：</p>\r\n      \r\n      <p>区块高度/交易哈希/账户地址</p>\r\n      </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchFail","D:\\workspace\\seelescan-frontend\\src\\utils\\string.ts",[],"D:\\workspace\\seelescan-frontend\\src\\pages\\Block\\index.tsx",["669","670","671","672","673","674"],"D:\\workspace\\seelescan-frontend\\src\\pages\\Transaction\\index.tsx",["675","676","677","678","679","680","681","682","683"],"D:\\workspace\\seelescan-frontend\\src\\pages\\Parameter\\index.tsx",["684","685","686","687","688","689","690","691","692"],"D:\\workspace\\seelescan-frontend\\src\\components\\TransactionTableRow\\index.tsx",["693"],"import React,{useState} from 'react'\r\nimport {\r\n    Table,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  import {setAgoTime,reduceString} from \"../../lib/scripts\";\r\n interface  TxTableRowProps{\r\n    txData:any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst TransactionTableRow: React.FC<TxTableRowProps> = ({txData}) => {\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell >{txData.tx_hash ? (\r\n                <StyledLink  to={`/transaction/${txData.tx_hash}`}>\r\n                    {reduceString(txData.tx_hash,6,6)}\r\n                </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"40px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{txData.messages ? \"transfer\"  : <Skeleton width={\"40px\"}/>}</Table.Cell>\r\n            <Table.Cell >{txData.height ? (\r\n                <StyledLink  to={`/block/${txData.height}`}>\r\n                    {txData.height}\r\n                </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"40px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{txData.timestamp ? <>{setAgoTime(txData.timestamp)}</> : <Skeleton width={\"80px\"}/>}</Table.Cell>\r\n          </Table.Row>\r\n    )\r\n}\r\n\r\nexport default TransactionTableRow","D:\\workspace\\seelescan-frontend\\src\\utils\\i18n.ts",[],"D:\\workspace\\seelescan-frontend\\src\\utils\\cache.ts",["694"],"D:\\workspace\\seelescan-frontend\\src\\utils\\date.ts",[],"D:\\其他\\seelescan-frontend\\src\\index.tsx",[],["695","696"],"D:\\其他\\seelescan-frontend\\src\\reportWebVitals.ts",[],"D:\\其他\\seelescan-frontend\\src\\utils\\i18n.ts",[],"D:\\其他\\seelescan-frontend\\src\\App.tsx",[],"D:\\其他\\seelescan-frontend\\src\\utils\\cache.ts",["697"],"import { getCSTTime } from './date'\n\nexport const storeCachedData = (key: string, value: any) => {\n  localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const fetchCachedData = <T>(key: string): T | null => {\n  const data: string | null = localStorage.getItem(key)\n  if (data) {\n    try {\n      const object = JSON.parse(data) as T\n      if (object) {\n        return object\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return null\n}\n\nexport const removeCachedData = (key: string) => {\n  localStorage.removeItem(key)\n}\n\nexport const storeDateChartCache = (key: string, value: any) => {\n  // cacheKey format: key + & + CST timestamp\n  let cacheKey = fetchCachedData<string>(key)\n  // Detect stored data and if null, remove it\n  if (cacheKey && fetchCachedData(cacheKey)) {\n    localStorage.removeItem(cacheKey)\n  }\n  cacheKey = `${key}&${getCSTTime()}`\n  storeCachedData(key, cacheKey)\n  storeCachedData(cacheKey, value)\n}\n\nexport const fetchDateChartCache = (key: string) => {\n  // cacheKey format: key + & + CST timestamp\n  const cacheKey = fetchCachedData<string>(key)\n  if (!cacheKey) return null\n  const storeTime = Number(cacheKey.substring(cacheKey.indexOf('&') + 1))\n  const now = new Date(getCSTTime()) // current CST time\n  // Chart data will be updated at 0:10(CST) every day\n  const dataUpdateTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 10, 0).getTime()\n  // If last storage time is bigger than data update time, return cache data. Otherwise return null\n  return storeTime > dataUpdateTime ? fetchCachedData(cacheKey) : null\n}\n\nexport const storeEpochChartCache = (key: string, value: any) => {\n  storeDateChartCache(key, value)\n}\n\nconst ThreeHours = 3 * 60 * 60 * 1000\nexport const fetchEpochChartCache = (key: string) => {\n  // cacheKey format: key + & + CST timestamp\n  const cacheKey = fetchCachedData<string>(key)\n  if (!cacheKey) return null\n  const storeTime = Number(cacheKey.substring(cacheKey.indexOf('&') + 1))\n  // If last storage time is bigger than data update time, return cache data. Otherwise return null\n  return getCSTTime() - storeTime < ThreeHours ? fetchCachedData(cacheKey) : null\n}\n\nexport default {\n  storeCachedData,\n  fetchCachedData,\n  storeDateChartCache,\n  fetchDateChartCache,\n  storeEpochChartCache,\n  fetchEpochChartCache,\n}\n","D:\\其他\\seelescan-frontend\\src\\utils\\media.tsx",[],"D:\\其他\\seelescan-frontend\\src\\utils\\date.ts",[],"D:\\其他\\seelescan-frontend\\src\\theme\\index.tsx",[],"D:\\其他\\seelescan-frontend\\src\\routes\\index.tsx",[],"D:\\其他\\seelescan-frontend\\src\\constants\\index.tsx",[],"D:\\其他\\seelescan-frontend\\src\\components\\Footer\\index.tsx",["698","699"],"import React from 'react'\r\nimport {Segment,Container,Image,List} from 'semantic-ui-react'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport logo from '../../assets/images/seelen.png'\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div>\r\n        <Segment inverted vertical attached='bottom' style={{ margin: '5em 0em 0em', padding: '2em 0em' }}>\r\n            <Container textAlign='center'>\r\n                <Image centered size='mini' src={logo} />\r\n                <List horizontal inverted divided link size='small'>\r\n                <List.Item as='a' href='https://seele-n.pro'>\r\n                    Web site\r\n                </List.Item>\r\n                <List.Item as='a' href='https://twitter.com/n_seele'>\r\n                   Twitter\r\n                </List.Item>\r\n                </List>\r\n            </Container>\r\n        </Segment>\r\n    </div>\r\n  )\r\n}\r\nexport default Footer","D:\\其他\\seelescan-frontend\\src\\pages\\Block\\index.tsx",["700","701","702","703","704","705","706"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport TransactionTableRow from \"../../components/TransactionTableRow\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useFetch} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport {_,empty,setAgoTime,getTotalTime} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\ninterface RouteParams {\r\n    address: string;\r\n  }\r\n\r\nconst Block: React.FC = () => {\r\n    const [t] = useTranslation()\r\n  const params = useParams<RouteParams>();\r\n  const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.BLOCK}/${params.address}`, \"get\");\r\n  \r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n    \r\n    const BlockTitleRender = React.useMemo(\r\n\t\t() => (\r\n\r\n            <Header as='h2' >{i18n.t('block.block_details')}#{data.data?.Data?.Block?.height? data.data.Data.Block.height:\"\"}</Header>\r\n\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  const BlockContentRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t<Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('block.block_data')}</Header>\r\n                    </Segment>\r\n\r\n                <Segment>\r\n                    <Grid stackable columns={2} verticalAlign='middle'>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                                <Header as='h4'>{i18n.t('block.height')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' style={{  paddingTop: '0.2em' }}>\r\n                                <Header as='h5'>{data.data?.Data?.Block?.height? data.data.Data.Block.height:\"\"} </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>{i18n.t('block.block_time')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>{data.data?.Data?.Block?.timestamp?`${setAgoTime(data.data.Data.Block.timestamp)}(${getTotalTime(data.data.Data.Block.timestamp)})`:\"\"}</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>{i18n.t('block.block_hash')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>{data.data?.Data?.Block?.block_hash?data.data.Data.Block.block_hash:\"\"}</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>{i18n.t('block.parent_hash')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>{data.data?.Data?.Block?.parent_hash?data.data.Data.Block.parent_hash:\"\"}</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>{i18n.t('block.number_of_tx')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>{data.data?.Data?.Block?.total_txs?data.data.Data.Block.total_txs:\"\"}</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '3' >\r\n                                <Header as='h4'>{i18n.t('block.proposal')}</Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '13' >\r\n                                <Header as='h5'>{data.data?.Data?.Block?.moniker?data.data.Data.Block.moniker:\"\"}</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n                </Segment.Group>\r\n\r\n                <Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('block.transactions')}</Header>\r\n                    </Segment>\r\n\r\n                    <Segment>\r\n                        <Table striped  unstackable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.tx_hash')}</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.type')}</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\r\n                                <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                            {_.map(empty(data?.data)?Array.from({length:6},(z,idx) => ({id:idx})):data?.data?.Data?.Txs, (v:any, i:any) => (\r\n                                <TransactionTableRow txData={v} />\r\n                            ))}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      {BlockTitleRender}\r\n      {BlockContentRender}\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Block","D:\\其他\\seelescan-frontend\\src\\pages\\Blocks\\index.tsx",["707","708","709","710","711","712","713","714"],"import React from 'react'\nimport {\n  Container,\n  Segment,\n  Grid,\n  Header,\n  List,\n  Image,\n  Table,\n  Icon,\n  Button,\n  Pagination,\n  PaginationProps,\n} from 'semantic-ui-react'\nimport {useFetch, useTimer} from \"../../hooks\";\nimport constants from \"../../constants\";\nimport BlockTableRow from \"../../components/BlockTableRow\";\nimport {_,empty} from \"../../lib/scripts\";\nimport { useTranslation } from 'react-i18next'\nimport i18n from '../../utils/i18n'\n\nconst PAGE_SIZE:number = 20;\nvar   blockbefore = 0\n\nconst Blocks: React.FC = () => {\n  \n  const [t] = useTranslation()\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.BLOCKLIST}?limit=${PAGE_SIZE}&before=${blockbefore}`, \"get\");\n\n\tReact.useEffect(() => {\n\t\trequestFetch();\n\t}, [requestFetch]);\n\n  const tableBodyRender = React.useMemo(\n\t\t() => (\n\t\t\t<>\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Blocks, (v:any, i:any) => (\n\t\t\t\t\t<BlockTableRow blockData={v} />\n\t\t\t\t))}\n\t\t\t</>\n\t\t),\n\t\t[data]\n\t);\n\n  const handlePageChange = (e:any, {activePage}:PaginationProps) => {\n    console.log(activePage)\n  }\n\n  const paginationRender = React.useMemo(\n\t\t() => (\n\t\t\t<Pagination\n            defaultActivePage={1}\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\n            totalPages={Math.ceil(data?.data?.Data?.Total/PAGE_SIZE)}\n            onPageChange={(e:any, {activePage}:PaginationProps) =>{\n              blockbefore = data?.data?.Data?.Total-(Number(activePage)-1)*PAGE_SIZE + 1\n              setUrl(`${constants.API_BASE}${constants.API.BLOCKLIST}?limit=${PAGE_SIZE}&before=${blockbefore}`);\n            }}\n            />\n\t\t),\n\t\t[data]\n\t);\n\n\n  return (\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\n      <Header as='h3' >{i18n.t('common.blocks_up')}</Header>\n      <Segment raised>\n        <Table striped  unstackable>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.proposer')}</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.txs')}</Table.HeaderCell>\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{tableBodyRender}</Table.Body>\n        </Table>\n      </Segment>\n      <Segment vertical textAlign='right'>\n        <>\n          {paginationRender}\n        </>\n        </Segment>\n    </Container>\n  )\n}\n\nexport default Blocks\n","D:\\其他\\seelescan-frontend\\src\\components\\Page\\index.tsx",["715","716"],"import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {Segment,Menu,Image,Icon, Container, Dropdown,MenuItemProps,Sidebar,SidebarProps} from 'semantic-ui-react'\r\nimport {Media} from '../../utils/media'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport AppMenu from '../AppMenu'\r\nimport PageHeader from '../PageHeader'\r\n\r\nexport const PagePanel = styled.div`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background-color: #f9f9f9;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst DesktopContainer: React.FC = ({ children }) => {\r\n  return (\r\n    <Media greaterThan='sm' >\r\n      <Segment\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 200, padding: '1em 0em' }}\r\n            vertical\r\n          >\r\n        <Menu borderless inverted secondary size='large'>\r\n              <AppMenu/>\r\n        </Menu>\r\n        <PageHeader/>\r\n      </Segment>\r\n      {children}\r\n    </Media>\r\n  )\r\n}\r\n\r\nconst MobileContainer: React.FC = ({ children }) => {\r\n  const [sidebarOpened ,setSidebarOpened ] = useState(false)\r\n  const handleSidebarHide = (e:any, {visible}:SidebarProps) => {setSidebarOpened(false)}\r\n  const handleSidebarShow = (e:any, {visible}:SidebarProps) => {setSidebarOpened(true)}\r\n  return (\r\n    <Media at='sm'>\r\n       <Sidebar.Pushable>\r\n        <Sidebar\r\n            as={Menu}\r\n            animation='overlay'\r\n            inverted\r\n            onHide={handleSidebarHide}\r\n            vertical\r\n            visible={sidebarOpened}\r\n            direction='right'\r\n        >\r\n          <AppMenu/>\r\n        </Sidebar>\r\n        <Sidebar.Pusher dimmed={sidebarOpened}>\r\n          <Segment\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 200, padding: '1em 0em' }}\r\n            vertical\r\n          >\r\n            <Container>\r\n              <Menu inverted pointing secondary size='large'>\r\n                <Menu.Item as={Link} to='/'>\r\n                    <Image size='mini' src={logo} style={{ marginRight: '0.5em' }} />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item onClick={handleSidebarShow}  position='right'>\r\n                  <Icon name='sidebar' style={{ marginBottom: '0.6em' }}/>\r\n                </Menu.Item>\r\n                \r\n              </Menu>\r\n            </Container>\r\n            <PageHeader mobile/>\r\n          </Segment>\r\n          {children}\r\n        </Sidebar.Pusher>\r\n       </Sidebar.Pushable>\r\n    </Media>\r\n  )\r\n}\r\nconst Page: React.FC = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <DesktopContainer>{children}</DesktopContainer>\r\n      <MobileContainer>{children}</MobileContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Page\r\n","D:\\其他\\seelescan-frontend\\src\\pages\\Transactions\\index.tsx",["717","718","719","720","721","722","723"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n} from 'semantic-ui-react'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport TransactionTableRow from \"../../components/TransactionTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   txbefore = 0\r\n\r\nconst Transactions: React.FC = () => {\r\n  const [t] = useTranslation()\r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.TRANSACTIONS}?limit=${PAGE_SIZE}&before=${txbefore}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Txs, (v:any, i:any) => (\r\n\t\t\t\t\t<TransactionTableRow txData={v} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  const paginationRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<Pagination\r\n            defaultActivePage={1}\r\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\r\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\r\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\r\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\r\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\r\n            totalPages={Math.ceil(data?.data?.Data?.Total/PAGE_SIZE)}\r\n            onPageChange={(e:any, {activePage}:PaginationProps) =>{\r\n              txbefore = data?.data?.Data?.Total-(Number(activePage)-1)*PAGE_SIZE + 1\r\n              setUrl(`${constants.API_BASE}${constants.API.TRANSACTIONS}?limit=${PAGE_SIZE}&before=${txbefore}`);\r\n            }}\r\n            />\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >{i18n.t('common.transactions_up')}</Header>\r\n      <Segment raised>\r\n      <Table striped  unstackable>\r\n        <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.tx_hash')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.type')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n      <Segment vertical textAlign='right'>\r\n        <>\r\n          {paginationRender}\r\n        </>\r\n        </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Transactions","D:\\其他\\seelescan-frontend\\src\\pages\\Home\\index.tsx",["724","725","726"],"import React, { useState,useRef, useCallback } from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\n//import ReactEchartsCore from 'echarts-for-react/lib/core'\r\n//import echarts from 'echarts/lib/echarts'\r\nimport {Link} from 'react-router-dom'\r\nimport ReactECharts from 'echarts-for-react';\r\nimport { localeNumberString } from '../../utils/number'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport BlockTableRow from \"../../components/BlockTableRow\";\r\nimport TransactionTableRow from \"../../components/TransactionTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst colors = ['#049ECD', '#69C7D4', '#74808E']\r\n\r\nconst getOption = (): echarts.EChartOption => {\r\n  const  bankAmount = 800000\r\n  const  stakeAmount = 1600000\r\n  const  otherAmount = 600000\r\n  const sum = bankAmount + stakeAmount + otherAmount\r\n  const names = [\r\n    `${((bankAmount / sum) * 100).toFixed(1)}%`,\r\n    `${((stakeAmount / sum) * 100).toFixed(1)}%`,\r\n    `${((otherAmount / sum) * 100).toFixed(1)}%`,\r\n  ]\r\n  const seriesData = [\r\n    {\r\n      name: names[0],\r\n      value: bankAmount,\r\n      title: `${i18n.t('common.transfer')}`,\r\n    },\r\n    {\r\n      name: names[1],\r\n      value: stakeAmount,\r\n      title: `${i18n.t('common.stake')}`,\r\n    },\r\n    {\r\n      name: names[2],\r\n      value: otherAmount,\r\n      title: `${i18n.t('common.others')}`,\r\n    },\r\n  ]\r\n  const selectedData: any = {\r\n    first: true,\r\n  }\r\n  selectedData[names[0]] = true\r\n  selectedData[names[1]] = true\r\n  selectedData[names[2]] = true\r\n\r\n  return {\r\n    color: colors,\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: (value: any) => {\r\n        return `${value.data.title}: ${localeNumberString(value.data.value)} (${value.data.name})`\r\n      },\r\n      position: ['10%', '50%'],\r\n    },\r\n    series: [\r\n      {\r\n        name: 'secondary_issuance',\r\n        type: 'pie',\r\n        radius: '75%',\r\n        center: ['50%', '50%'],\r\n        data: seriesData,\r\n        label: {\r\n          normal: {\r\n            position: 'outside',\r\n            align: 'center',\r\n          },\r\n        },\r\n        labelLine: {\r\n          length: 4,\r\n          length2:  12,\r\n        },\r\n        itemStyle: {\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n \r\n  const [t] = useTranslation()\r\n  const screenWidth = useRef<number>(window.innerWidth)\r\n  const widthDiff = window.innerWidth > 750 && Math.abs(screenWidth.current - window.innerWidth)\r\n  const clickEvent = useCallback(() => {\r\n    if (widthDiff) {\r\n      screenWidth.current = window.innerWidth\r\n    }\r\n  }, [widthDiff])\r\n\r\n\r\n  const [watching] = useTimer(true, constants.NUM.DASH_REAL_TIME_DELAY_MS);\r\n\r\n  \r\n  const [data, requestFetchBlock] = useFetch(`${constants.API_BASE}${constants.API.BLOCKLIST}?limit=10`, \"get\");\r\n  const [datatx, requestFetchTx] = useFetch(`${constants.API_BASE}${constants.API.TRANSACTIONS}?limit=10`, \"get\");\r\n  const [dataStatus, requestFetchStatus] = useFetch(`${constants.API_BASE}${constants.API.STATUS}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetchBlock()\r\n    requestFetchTx()\r\n    requestFetchStatus()\r\n\t}, [watching, requestFetchBlock,requestFetchTx,requestFetchStatus]);\r\n\r\n  const blockTableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:6},(z,idx) => ({id:idx})):data?.data?.Data?.Blocks, (v:any, i:any) => (\r\n\t\t\t\t\t<BlockTableRow blockData={v} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n  \r\n  const txTableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(datatx?.data)?Array.from({length:6},(z,idx) => ({id:idx})):datatx?.data?.Data?.Txs, (v:any, i:any) => (\r\n\t\t\t\t\t<TransactionTableRow txData={v} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[datatx]\r\n\t);\r\n\r\n  const statusBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<List horizontal>\r\n        <List.Item>\r\n          <Segment style={{ padding: '3em 2em' }} vertical>\r\n            <Icon name='block layout' size='big' style={{ marginBottom: '0.2em' }}/>\r\n            <List.Content>\r\n              <List.Header as='h4'>{i18n.t('common.last_height')}</List.Header>\r\n              <Header as='h3'>{dataStatus.data?.Data?.latest_block_height?dataStatus.data.Data.latest_block_height:\"\"}</Header>\r\n            </List.Content>\r\n          </Segment>\r\n        </List.Item>\r\n        <List.Item>\r\n          <Segment style={{ padding: '2em 2em' }} vertical>\r\n          <Icon name='credit card outline' size='big' style={{ marginBottom: '0.2em' }}/>\r\n          <List.Content>\r\n            <List.Header as='h4'>{i18n.t('common.block_time')}</List.Header>\r\n            <Header as='h3'>{dataStatus.data?.Data?.block_time?dataStatus.data.Data.block_time.toFixed(2)+'S':\"\"}</Header>\r\n          </List.Content>\r\n          </Segment>\r\n        </List.Item>\r\n        <List.Item>\r\n          <Segment style={{ padding: '2em 2em' }} vertical>\r\n          <Icon name='edit' size='big' style={{ marginBottom: '0.2em' }}/>\r\n          <List.Content>\r\n            <List.Header as='h4'>{i18n.t('common.transactions')}</List.Header>\r\n            <Header as='h3'>{dataStatus.data?.Data?.total_tx_num?dataStatus.data.Data.total_tx_num:\"\"}</Header>\r\n          </List.Content>\r\n          </Segment>\r\n        </List.Item>\r\n        <List.Item>\r\n          <Segment style={{ padding: '2em 2em' }} vertical>\r\n          <Icon name='users' size='big' style={{ marginBottom: '0.2em' }}/>\r\n          <List.Content>\r\n            <List.Header as='h4'>{i18n.t('common.validators')}</List.Header>\r\n            <Header as='h3'>{dataStatus.data?.Data?.total_validator_num?dataStatus.data.Data.total_validator_num:\"\"}</Header>\r\n          </List.Content>\r\n          </Segment>\r\n        </List.Item>\r\n      </List>\r\n\t\t),\r\n\t\t[dataStatus]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n\r\n        <Grid stackable columns={2} verticalAlign='middle'>\r\n          <Grid.Row textAlign='center' verticalAlign='middle'>\r\n            <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n              <Segment raised style={{ minHeight: 180,paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                {statusBodyRender}\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n              <Segment raised style={{ minHeight: 180, paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                <Header as='h4'>{i18n.t('common.snp_distribution')}</Header>\r\n                <Grid stackable columns={2} verticalAlign='middle'>\r\n                  <Grid.Column width= '10'>\r\n                    <ReactECharts\r\n                      option={getOption()}\r\n                      notMerge\r\n                      lazyUpdate\r\n                      style={{\r\n                        height: '130px',\r\n                        width: '100%',\r\n                      }}\r\n                      onEvents={{ click: clickEvent }}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width= '6'>\r\n                    <Segment style={{ padding: '0.5em 0.5em' }} vertical textAlign='left'>\r\n                      <Header as='h6'><Icon name='circle'  style={{ color: colors[1]}}/>{i18n.t('common.stake')}</Header>\r\n                      <Header as='h6'><Icon name='circle'  style={{ color: colors[0]}}/>{i18n.t('common.transfer')}</Header>                    \r\n                      <Header as='h6'><Icon name='circle'  style={{ color: colors[2]}}/>{i18n.t('common.others')}</Header>\r\n                    </Segment>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      \r\n        <Grid stackable columns={2} verticalAlign='top'>\r\n          <Grid.Row textAlign='left' verticalAlign='top'>\r\n            <Grid.Column style={{ paddingBottom: '0.5em' }}>\r\n              <Segment raised>\r\n              <Grid>\r\n                <Grid.Column floated='left' width={5} verticalAlign='middle'>\r\n                  <Header as='h4' >{i18n.t('common.blocks_up')} </Header>\r\n                </Grid.Column>\r\n                <Grid.Column floated='right' width={5} textAlign='right'>\r\n                  <Button secondary as={Link} to='/blocks'>{i18n.t('common.more')}</Button>\r\n                </Grid.Column>\r\n              </Grid>\r\n              <Table striped  unstackable>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.proposer')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.txs')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>{blockTableBodyRender}</Table.Body>\r\n              </Table>\r\n                \r\n              </Segment>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column style={{ paddingBottom: '0.5em' }}>\r\n              <Segment raised>\r\n              <Grid>\r\n                <Grid.Column floated='left' width={5} verticalAlign='middle'>\r\n                  <Header as='h4' >{i18n.t('common.transactions_up')} </Header>\r\n                </Grid.Column>\r\n                <Grid.Column floated='right' width={5} textAlign='right'>\r\n                  <Button secondary as={Link} to='/transactions'>{i18n.t('common.more')}</Button>\r\n                </Grid.Column>\r\n              </Grid>\r\n              \r\n              <Table striped  unstackable>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.tx_hash')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.type')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>{txTableBodyRender}</Table.Body>\r\n              </Table>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n    </Container> \r\n  )\r\n}\r\n\r\nexport default Home\r\n","D:\\其他\\seelescan-frontend\\src\\pages\\Transaction\\index.tsx",["727","728","729","730","731","732","733","734","735","736"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport {_,empty,setAgoTime,getTotalTime} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\ninterface RouteParams {\r\n    address: string;\r\n  }\r\n\r\nconst Transaction: React.FC = () => {\r\n    const [t] = useTranslation()\r\n  const params = useParams<RouteParams>();\r\n  const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.TRANSACTION}/${params.address}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const ContentRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t<Segment.Group raised>\r\n              <Segment>\r\n                  <Header as='h3' >{i18n.t('transaction.infomation')}</Header>\r\n              </Segment>\r\n\r\n          <Segment>\r\n              <Grid stackable columns={2} verticalAlign='middle'>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                          <Header as='h4'>{i18n.t('transaction.txhash')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' style={{  paddingTop: '0.2em' }}>\r\n                          <Header as='h5'>{data.data?.Data?.tx_hash?data.data.Data.tx_hash:\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('transaction.status')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>\r\n                            \r\n                              {data.data?.Data?data.data.Data.code===0?\r\n                              (\r\n                                <Header as='h4'>\r\n                                    <Icon name='check' size='tiny' color='green'/> \r\n                                    {i18n.t('transaction.success')}\r\n                                </Header>\r\n                              )\r\n                              :\r\n                              (\r\n                                <Header as='h4'>\r\n                                    <Icon name='close' size='tiny' color='red'/> \r\n                                    {i18n.t('transaction.failure')}\r\n                                </Header>\r\n                              ):\"\"\r\n                              }\r\n                          </Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('transaction.height')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.height?data.data.Data.height:\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('transaction.time')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.timestamp?`${setAgoTime(data.data.Data.timestamp)}(${getTotalTime(data.data.Data.timestamp)})`:\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                 \r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('transaction.gas')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.gas_used?data.data.Data.gas_used:\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  \r\n              </Grid>\r\n          </Segment>\r\n          </Segment.Group>\r\n\r\n          <Segment.Group raised>\r\n                <Segment>\r\n                    <Header as='h3' >{i18n.t('transaction.message')}</Header>\r\n                </Segment>\r\n\r\n                <Segment>\r\n                    <Container text>\r\n                        <p>{data.data?.Data?.memo?data.data.Data.memo:\"\"}</p>\r\n                    </Container>\r\n                </Segment>\r\n            </Segment.Group>\r\n\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h2' >{i18n.t('transaction.transaction_details')}</Header>\r\n      {ContentRender}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Transaction","D:\\其他\\seelescan-frontend\\src\\pages\\Validators\\index.tsx",["737","738","739","740","741","742","743","744","745","746","747"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n} from 'semantic-ui-react'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\nconst Validators: React.FC = () => {\r\n  \r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.VALIDATORS}?limit=125`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Validators, (v:any, i:any) => (\r\n          <ValidatorTableRow index={i+1} data={v}/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >{i18n.t('common.validators_up')}</Header>\r\n      <Segment raised>\r\n        <Table striped  unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.rank')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.validator')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.voting_power')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.fee')}</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Validators","D:\\其他\\seelescan-frontend\\src\\pages\\Proposals\\index.tsx",["748","749","750","751","752","753","754"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport {useFetch} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ProposalTableRow from \"../../components/ProposalTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\n\r\nconst Proposals: React.FC = () => {\r\n  \r\n  const [t] = useTranslation()\r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.PROPOSALS}?limit=125`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Proposals, (v:any, i:any) => (\r\n          <ProposalTableRow data={v}/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h3' >{i18n.t('common.proposals_up')}</Header>\r\n      <Segment raised>\r\n        <Table striped  unstackable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.id')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.title')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.status')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.voting_start')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.submit_time')}</Table.HeaderCell>\r\n              <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.total_deposit')}</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>{tableBodyRender}</Table.Body>\r\n        </Table>\r\n      </Segment>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposals","D:\\其他\\seelescan-frontend\\src\\pages\\Validator\\index.tsx",["755","756","757","758","759","760","761","762","763","764"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport BlockTableRow from \"../../components/BlockTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PAGE_SIZE:number = 20;\r\nvar   blockbefore = 0\r\n\r\ninterface RouteParams {\r\n    address: string;\r\n  }\r\n\r\nconst Validator: React.FC = () => {\r\n    const [t] = useTranslation()\r\n  const params = useParams<RouteParams>();\r\n  const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.VALIDATOR}/${params.address}`, \"get\");\r\n  const [dataBlock, requestFetchBlock,setUrl] = useFetch(``, \"get\");\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n    React.useEffect(() => {\r\n\t\tif (!_.isNil(data.data?.Data)){\r\n            setUrl(`${constants.API_BASE}${constants.API.BLOCKLIST}/${data.data.Data.consensus_address}`);\r\n        }\r\n\t}, [data]);\r\n\r\n    const blockTableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(dataBlock?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):dataBlock?.data?.Data, (v:any, i:any) => (\r\n\t\t\t\t\t<BlockTableRow blockData={v} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[dataBlock]\r\n\t);\r\n\r\n  const ValidatorContentRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t<Segment.Group raised>\r\n          <Segment>\r\n              <Header as='h3' >{data.data?.Data?.moniker?data.data.Data.moniker:\"\"}</Header>\r\n              <Grid stackable columns={2} verticalAlign='top'>\r\n                  <Grid.Row textAlign='left' verticalAlign='top'>\r\n                      <Grid.Column width= '8' style={{ paddingTop: '0.2em' }}>\r\n                          <Header as='h4'>{i18n.t('validator.operator_address')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '8' style={{  paddingTop: '0.2em' }}>\r\n                          <Header as='h4'>{i18n.t('validator.account_address')}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='top'>\r\n                      <Grid.Column width= '8' >\r\n                          <p>{data.data?.Data?.operator_address?data.data.Data.operator_address:\"\"}</p>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '8' >\r\n                          <p>{data.data?.Data?.account_address?data.data.Data.account_address:\"\"}</p>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n          </Segment>\r\n\r\n          <Segment>\r\n              <Grid stackable columns={2} verticalAlign='middle'>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                          <Header as='h4'>{i18n.t('validator.website')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' style={{  paddingTop: '0.2em' }}>\r\n                          <Header as='h5'>seele-n.pro</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('validator.fee')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.commission_rate?Number(data.data.Data.commission_rate*100).toFixed(2)+'%':\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('validator.voting_power')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.voting_power?`${Number(data.data.Data.delegator_shares).toFixed(4)}(${(Number(data.data.Data.voting_power)/100).toFixed(2)+'%'})`:\"\"}</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n                  <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                      <Grid.Column width= '3' >\r\n                          <Header as='h4'>{i18n.t('validator.self_bonded')}</Header>\r\n                      </Grid.Column>\r\n                      <Grid.Column width= '13' >\r\n                          <Header as='h5'>{data.data?.Data?.tokens?data.data.Data.tokens:\"\"}SNP</Header>\r\n                      </Grid.Column>\r\n                  </Grid.Row>\r\n              </Grid>\r\n          </Segment>\r\n          </Segment.Group>\r\n\r\n          <Segment.Group raised>\r\n              <Segment>\r\n                  <Header as='h3' >{i18n.t('validator.proposed_blocks')}</Header>\r\n              </Segment>\r\n\r\n              <Segment>\r\n                  <Table striped  unstackable>\r\n                      <Table.Header>\r\n                          <Table.Row>\r\n                          <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.height')}</Table.HeaderCell>\r\n                          <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.proposer')}</Table.HeaderCell>\r\n                          <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.txs')}</Table.HeaderCell>\r\n                          <Table.HeaderCell style={{ fontSize: '1.12em' }}>{i18n.t('common.time')}</Table.HeaderCell>\r\n                          </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>{blockTableBodyRender}</Table.Body>\r\n                  </Table>\r\n              </Segment>\r\n          </Segment.Group>\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h2' >{i18n.t('validator.validator_details')}</Header>\r\n        {ValidatorContentRender}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Validator","D:\\其他\\seelescan-frontend\\src\\pages\\Proposal\\index.tsx",["765","766","767","768","769","770","771","772","773","774","775"],"D:\\其他\\seelescan-frontend\\src\\pages\\404\\index.tsx",["776"],"D:\\其他\\seelescan-frontend\\src\\pages\\Parameter\\index.tsx",["777","778","779","780","781","782","783","784","785","786"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Label,\r\n} from 'semantic-ui-react'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\n\r\nconst Parameter: React.FC = () => {\r\n\r\n    const [t] = useTranslation()\r\n  const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.PARAMETER}`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const ContentRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t<Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('params.stakingparams')}</Header>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid stackable columns={4} verticalAlign='middle'>\r\n                            <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column width= '4' style={{ paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.unbonding_time')}</Header>\r\n                                    <Label color='green' key='green' size='large'>21</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '4' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.max_validators')}</Header>\r\n                                    <Label color='green' key='green' size='large'>21</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '4' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.max_entyies')}</Header>\r\n                                    <Label color='green' key='green' size='large'>7</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '4' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.bond_denom')}</Header>\r\n                                    <Label color='green' key='green' size='large'>SNP</Label>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\r\n                <Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('params.mintparams')}</Header>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid stackable columns={5} verticalAlign='middle'>\r\n                            <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.goal_bonded')}</Header>\r\n                                    <Label color='green' key='green' size='large'>67%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.inflation')}</Header>\r\n                                    <Label color='green' key='green' size='large'>7%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.blocks_per_year')}</Header>\r\n                                    <Label color='green' key='green' size='large'>10512000</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.annual_provisions')}</Header>\r\n                                    <Label color='green' key='green' size='large'>2102400000</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.mint_denom')}</Header>\r\n                                    <Label color='green' key='green' size='large'>Seele</Label>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\r\n                <Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('params.slashingparams')}</Header>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid stackable columns={5} verticalAlign='middle'>\r\n                            <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column width= '3' style={{ paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.signed_blocks_window')}</Header>\r\n                                    <Label color='green' key='green' size='large'>10000</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.min_signed_per_window')}</Header>\r\n                                    <Label color='green' key='green' size='large'>5%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.downtime_jail_duration')}</Header>\r\n                                    <Label color='orange' key='orange' size='large'>10{i18n.t('params.minute')}</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.double_sign_slash')}</Header>\r\n                                    <Label color='orange' key='orange' size='large'>5%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '3' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.downtime_slash')}</Header>\r\n                                    <Label color='orange' key='orange' size='large'>0.01%</Label>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\r\n                <Segment.Group raised>\r\n                    <Segment>\r\n                        <Header as='h3' >{i18n.t('params.distributiongparams')}</Header>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid stackable columns={3} verticalAlign='middle'>\r\n                            <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                                <Grid.Column width= '5' style={{ paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.community_tax')}</Header>\r\n                                    <Label color='green' key='green' size='large'>2%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '5' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.base_proposer_reward')}</Header>\r\n                                    <Label color='green' key='green' size='large'>1%</Label>\r\n                                </Grid.Column>\r\n                                <Grid.Column width= '5' style={{  paddingTop: '0.2em' }}>\r\n                                    <Header as='h4'>{i18n.t('params.bonus_proposer_reward')}</Header>\r\n                                    <Label color='green' key='green' size='large'>4%</Label>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <Container style={{ padding: '1em 1em',background: '#f3f5f9' }}>\r\n      <Header as='h2' >{i18n.t('params.chainparams')}</Header>\r\n      {ContentRender}\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Parameter","D:\\其他\\seelescan-frontend\\src\\pages\\SearchFail\\index.tsx",["787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803"],"D:\\其他\\seelescan-frontend\\src\\lib\\scripts.js",[],["804","805"],"D:\\其他\\seelescan-frontend\\src\\utils\\number.ts",[],"D:\\其他\\seelescan-frontend\\src\\hooks\\index.js",[],"D:\\其他\\seelescan-frontend\\src\\components\\TransactionTableRow\\index.tsx",["806"],"D:\\其他\\seelescan-frontend\\src\\components\\AppMenu\\index.tsx",["807","808","809"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Menu,Image, Container, Dropdown,MenuItemProps,DropdownItemProps,Label} from 'semantic-ui-react'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport {Media} from '../../utils/media'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n,{changeLanguage} from '../../utils/i18n'\r\n\r\nconst AppMenu: React.FC = () => {\r\n    const [t] = useTranslation()\r\n    const [activeItem,setActiveItem] = useState('home')\r\n    const handleItemClick = (e:any, {name}:MenuItemProps) => {setActiveItem(name)}\r\n    const handleDropdownItemClick = (e:any, {value}:DropdownItemProps) => {setActiveItem(value.toString())}\r\n    return (\r\n        <Container>\r\n            {!isMobile() && (\r\n                <Menu.Item as={Link} to='/' header\r\n                    onClick = {()=>{setActiveItem('home')}}\r\n                >\r\n                    <Image size='tiny' src={logo} style={{ marginRight: '0.5em' }} />\r\n                    <Label color='teal' floating>\r\n                    testnet\r\n                    </Label>\r\n\r\n                </Menu.Item>\r\n            )\r\n            }\r\n\r\n            <Menu.Item\r\n                as={Link}\r\n                name={i18n.t('menu.home')}\r\n                active={activeItem === 'home'}\r\n                to='/'\r\n                onClick = {handleItemClick}\r\n            />\r\n            <Dropdown item simple  text={i18n.t('menu.blockchain')}>\r\n                <Dropdown.Menu direction='left'>\r\n                    <Dropdown.Item as={Link} to='/blocks' value='blocks' onClick = {handleDropdownItemClick} >{i18n.t('menu.blocks')}</Dropdown.Item>\r\n                    <Dropdown.Item as={Link} to='/transactions' value='transactions' onClick = {handleDropdownItemClick}>{i18n.t('menu.transactions')}</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Menu.Item\r\n                as={Link}\r\n                name={i18n.t('menu.validators')}\r\n                active={activeItem === 'validators'}\r\n                to='/validators'\r\n                onClick = {handleItemClick}\r\n            />\r\n            \r\n            <Dropdown item simple  text={i18n.t('menu.governance')}>\r\n                <Dropdown.Menu direction='left'>\r\n                    <Dropdown.Item as={Link} to='/proposals' value='proposals' onClick = {handleDropdownItemClick} >{i18n.t('menu.proposals')}</Dropdown.Item>\r\n                    <Dropdown.Item as={Link} to='/parameter' value='parameter' onClick = {handleDropdownItemClick} >{i18n.t('menu.system_params')}</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            {!isMobile() && (\r\n                        <Menu.Item position='right'>\r\n                            <Dropdown item simple  text={i18n.t('menu.language')}>\r\n                                <Dropdown.Menu direction='left'>\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('en')\r\n                                        }} >English</Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('zh')\r\n                                        }} >中文</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Item>\r\n                )\r\n            }\r\n            {isMobile() && (\r\n                <Dropdown item simple text={i18n.t('menu.language')}>\r\n                    <Dropdown.Menu direction='left'>\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('en')\r\n                            }} >English</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('zh')\r\n                            }} >中文</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AppMenu","D:\\其他\\seelescan-frontend\\src\\components\\BlockTableRow\\index.tsx",["810"],"import React,{useState} from 'react'\r\nimport {\r\n    Table,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  import {setAgoTime} from \"../../lib/scripts\";\r\n\r\n interface  BlockTableRowProps{\r\n    blockData:any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst BlockTableRow: React.FC<BlockTableRowProps> = ({blockData}) => {\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell >{blockData.height ? (\r\n                <StyledLink  to={`/block/${blockData.height}`}>\r\n                    {blockData.height}\r\n                </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"40px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell >{blockData.moniker ? (\r\n                  <StyledLink  to={`/validator/${blockData.proposer}`}>\r\n                    {blockData.moniker}\r\n                  </StyledLink>\r\n                ) : (\r\n                    <Skeleton width={\"80px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{blockData.height ? blockData.num_txs ? blockData.num_txs : \"0\" : <Skeleton width={\"40px\"}/>}</Table.Cell>\r\n            <Table.Cell>{blockData.timestamp ? <>{setAgoTime(blockData.timestamp)}</> : <Skeleton width={\"80px\"}/>}</Table.Cell>\r\n          </Table.Row>\r\n    )\r\n}\r\n\r\nexport default BlockTableRow","D:\\其他\\seelescan-frontend\\src\\components\\PageHeader\\index.tsx",["811","812","813","814","815","816","817","818"],"import React,{useRef,useState} from 'react'\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Icon,\r\n  Input,\r\n  InputOnChangeData,\r\n} from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router'\r\nimport PropTypes from 'prop-types'\r\nimport { HeaderEmptyPanel } from './styled'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { addPrefixForHash, containSpecialChar } from '../../utils/string'\r\nimport {stringNumCheck} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\n\r\nconst PageHeader = ({mobile}:{mobile?:boolean}) => {\r\n\r\n  const [t] = useTranslation()\r\n  const history = useHistory()\r\n  const [searchValue,setSearchValue] = useState('')\r\n  const handleSearch = () => {\r\n    const query = searchValue.trim().replace(',', '')\r\n    if (!query || containSpecialChar(query)) {\r\n      history.push(`/searchfail?q=${query}`)\r\n      return\r\n    }else if (stringNumCheck(searchValue)){\r\n      history.push(`/block/${query}`)\r\n    }else if (searchValue.startsWith(\"seele\")){\r\n      history.push(`/account/${query}`)\r\n    }else if (searchValue.length === 64){\r\n      history.push(`/tx/${query}`)\r\n    }else {\r\n      history.push(`/searchfail?q=${query}`)\r\n      return\r\n    }\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const onInpuChange = (e: any,data: InputOnChangeData) => {setSearchValue(data.value)}\r\n  \r\n  return (\r\n    <Container text>\r\n    <Header\r\n      as='h1'\r\n      content={i18n.t('common.seele_scan')}\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '2.5em' : '3.5em',\r\n        fontWeight: 'normal',\r\n        marginBottom: 0,\r\n        marginTop: mobile ? '0.2em' : '0.5em',\r\n      }}\r\n    />\r\n\r\n    <Input value={searchValue} fluid icon='search' iconPosition='left' placeholder='Search by block,transaction,address...' \r\n      onChange= {onInpuChange}\r\n      action={{\r\n        color: 'blue',\r\n        content: `${i18n.t('common.search')}`,\r\n        onClick: ()=>{handleSearch()},\r\n        }}  />\r\n\r\n  </Container>\r\n  )\r\n}\r\n\r\nPageHeader.propTypes = {\r\n  mobile: PropTypes.bool,\r\n}\r\n\r\nexport default PageHeader\r\n","D:\\其他\\seelescan-frontend\\src\\components\\ValidatorTableRow\\index.tsx",["819"],"import React,{useState} from 'react'\r\nimport {\r\n    Table,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  \r\n  interface  ValidatorTableRowProps{\r\n    data:any;\r\n    index?: any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst ValidatorTableRow: React.FC<ValidatorTableRowProps> = ({index,data}) => {\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell >{data.account_address ? index: <Skeleton />}</Table.Cell>\r\n\r\n            <Table.Cell >{data.moniker ? (\r\n                  <StyledLink  to={`/validator/${data.account_address}`}>\r\n                    {data.moniker}\r\n                  </StyledLink>\r\n                ) : (\r\n                    <Skeleton />\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{data.delegator_shares ? `${Number(data.delegator_shares).toFixed(4)}(${(Number(data.voting_power)/100).toFixed(2)+'%'})` : <Skeleton />}</Table.Cell>\r\n            <Table.Cell>{data.commission_rate ? <>{Number(data.commission_rate*100).toFixed(2)}%</> : <Skeleton />}</Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ValidatorTableRow","D:\\其他\\seelescan-frontend\\src\\components\\ProposalTableRow\\index.tsx",["820","821"],"D:\\其他\\seelescan-frontend\\src\\hooks\\useTimer.js",["822"],"D:\\其他\\seelescan-frontend\\src\\hooks\\useFetch\\useFetch.js",[],"D:\\其他\\seelescan-frontend\\src\\utils\\screen.ts",["823"],"D:\\其他\\seelescan-frontend\\src\\utils\\string.ts",[],"D:\\其他\\seelescan-frontend\\src\\hooks\\useFetch\\reducer.js",["824"],["825","826"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\index.tsx",[],["827","828"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\reportWebVitals.ts",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\i18n.ts",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\App.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\cache.ts",["829"],"import { getCSTTime } from './date'\r\n\r\nexport const storeCachedData = (key: string, value: any) => {\r\n  localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\nexport const fetchCachedData = <T>(key: string): T | null => {\r\n  const data: string | null = localStorage.getItem(key)\r\n  if (data) {\r\n    try {\r\n      const object = JSON.parse(data) as T\r\n      if (object) {\r\n        return object\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport const removeCachedData = (key: string) => {\r\n  localStorage.removeItem(key)\r\n}\r\n\r\nexport const storeDateChartCache = (key: string, value: any) => {\r\n  // cacheKey format: key + & + CST timestamp\r\n  let cacheKey = fetchCachedData<string>(key)\r\n  // Detect stored data and if null, remove it\r\n  if (cacheKey && fetchCachedData(cacheKey)) {\r\n    localStorage.removeItem(cacheKey)\r\n  }\r\n  cacheKey = `${key}&${getCSTTime()}`\r\n  storeCachedData(key, cacheKey)\r\n  storeCachedData(cacheKey, value)\r\n}\r\n\r\nexport const fetchDateChartCache = (key: string) => {\r\n  // cacheKey format: key + & + CST timestamp\r\n  const cacheKey = fetchCachedData<string>(key)\r\n  if (!cacheKey) return null\r\n  const storeTime = Number(cacheKey.substring(cacheKey.indexOf('&') + 1))\r\n  const now = new Date(getCSTTime()) // current CST time\r\n  // Chart data will be updated at 0:10(CST) every day\r\n  const dataUpdateTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 10, 0).getTime()\r\n  // If last storage time is bigger than data update time, return cache data. Otherwise return null\r\n  return storeTime > dataUpdateTime ? fetchCachedData(cacheKey) : null\r\n}\r\n\r\nexport const storeEpochChartCache = (key: string, value: any) => {\r\n  storeDateChartCache(key, value)\r\n}\r\n\r\nconst ThreeHours = 3 * 60 * 60 * 1000\r\nexport const fetchEpochChartCache = (key: string) => {\r\n  // cacheKey format: key + & + CST timestamp\r\n  const cacheKey = fetchCachedData<string>(key)\r\n  if (!cacheKey) return null\r\n  const storeTime = Number(cacheKey.substring(cacheKey.indexOf('&') + 1))\r\n  // If last storage time is bigger than data update time, return cache data. Otherwise return null\r\n  return getCSTTime() - storeTime < ThreeHours ? fetchCachedData(cacheKey) : null\r\n}\r\n\r\nexport default {\r\n  storeCachedData,\r\n  fetchCachedData,\r\n  storeDateChartCache,\r\n  fetchDateChartCache,\r\n  storeEpochChartCache,\r\n  fetchEpochChartCache,\r\n}\r\n","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\media.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\date.ts",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\routes\\index.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\theme\\index.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\constants\\index.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Validators\\index.tsx",["830","831","832","833","834","835","836","837","838","839","840","841"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n  Statistic,\r\n  Divider,\r\n} from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\nimport Spacer from '../../components/Spacer'\r\n\r\n\r\nconst PAGE_SIZE:number = 10;\r\nvar   blockbefore = 0\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\nconst Validators: React.FC = () => {\r\n  \r\n  const [data, requestFetch,setUrl] = useFetch(`${constants.API_BASE}${constants.API.VALIDATORS}?limit=125`, \"get\");\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  const tableBodyRender = React.useMemo(\r\n\t\t() => (\r\n\t\t\t<>\r\n\t\t\t\t{_.map(empty(data?.data)?Array.from({length:PAGE_SIZE},(z,idx) => ({id:idx})):data?.data?.Data?.Validators, (v:any, i:any) => (\r\n          <ValidatorTableRow index={i+1} data={v}/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t),\r\n\t\t[data]\r\n\t);\r\n\r\n  return (\r\n    <div>\r\n      <Spacer/>\r\n    <StyledSegment raised>\r\n      <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n        <Header as='h3' >Validators</Header>\r\n        <Divider/>\r\n        <Statistic.Group widths='four'>\r\n          <Statistic>\r\n            <Statistic.Value>2</Statistic.Value>\r\n            <Statistic.Label>Total Validators</Statistic.Label>\r\n          </Statistic>\r\n\r\n          <Statistic>\r\n            <Statistic.Value>2</Statistic.Value>\r\n            <Statistic.Label>Bonded Validators</Statistic.Label>\r\n          </Statistic>\r\n\r\n          <Statistic>\r\n          <Statistic.Value>0</Statistic.Value>\r\n            <Statistic.Label>Unbonding Validators</Statistic.Label>\r\n          </Statistic>\r\n\r\n          <Statistic>\r\n            <Statistic.Value>0</Statistic.Value>\r\n            <Statistic.Label>Unbonded Validators</Statistic.Label>\r\n          </Statistic>\r\n        </Statistic.Group>\r\n        \r\n          <Table striped  unstackable>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell ><Header color= 'grey' as= 'h5'>Validator</Header></Table.HeaderCell>\r\n                <Table.HeaderCell ><Header color= 'grey' as= 'h5'>Staked Amount(SNP)</Header></Table.HeaderCell>\r\n                <Table.HeaderCell ><Header color= 'grey' as= 'h5'>Fee</Header></Table.HeaderCell>\r\n                <Table.HeaderCell ><Header color= 'grey' as= 'h5'>Status</Header></Table.HeaderCell>\r\n                <Table.HeaderCell ><Header color= 'grey' as= 'h5'>Actions</Header></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>{tableBodyRender}</Table.Body>\r\n          </Table>\r\n      </Container>\r\n    </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Validators","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Transaction\\index.tsx",["842","843","844","845","846","847","848","849","850","851"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Validator\\index.tsx",["852","853","854","855","856","857","858","859","860","861"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Transactions\\index.tsx",["862","863","864","865","866","867","868"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Proposals\\index.tsx",["869","870","871","872","873","874","875"],["876","877"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\404\\index.tsx",["878"],"import React from 'react'\r\n\r\nconst Title: React.FC = () => {\r\n  return <div />\r\n}\r\n\r\nexport default () => {\r\n  return <Title />\r\n}\r\n","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Footer\\index.tsx",["879","880","881","882"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Segment,Container,Image,List} from 'semantic-ui-react'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport logo from '../../assets/images/seelen.png'\r\n\r\nconst StyledFooter = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: ${(props) => props.theme.topBarSize}px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.nav`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: #5c5c5e;\r\n  font-weight: 700;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #0f0f0f;\r\n  }\r\n`;\r\n\r\nfunction Nav() {\r\n  return (\r\n    <StyledNav>\r\n      \r\n      {isMobile?(\r\n        <StyledLink  href=\"https://discord.gg/bNN5Ae\">\r\n          Discord\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://discord.gg/bNN5Ae\">\r\n          Discord\r\n        </StyledLink>\r\n      )}\r\n\r\n      {isMobile?(\r\n        <StyledLink\r\n          href=\"https://github.com/Seele-N/NervLedger-Contract\"\r\n        >\r\n          Github\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink\r\n          target=\"_blank\"\r\n          href=\"https://github.com/Seele-N/NervLedger-Contract\"\r\n        >\r\n          Github\r\n        </StyledLink>\r\n      )}\r\n\r\n      {isMobile?(\r\n        <StyledLink  href=\"https://twitter.com/NevrLedger\">\r\n          Twitter\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://twitter.com/NevrLedger\">\r\n          Twitter\r\n        </StyledLink>\r\n      )}\r\n    </StyledNav>\r\n  );\r\n}\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <StyledFooter>\r\n        <Segment vertical attached='bottom' \r\n        >\r\n            <Container textAlign='center'>\r\n              <Nav/>\r\n            </Container>\r\n        </Segment>\r\n    </StyledFooter>\r\n  )\r\n}\r\nexport default Footer","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Page\\index.tsx",["883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898"],"import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {Segment,Menu,Image,Icon, Container, Dropdown,MenuItemProps,Sidebar,SidebarProps} from 'semantic-ui-react'\r\nimport {Media} from '../../utils/media'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport AppMenu from '../AppMenu'\r\nimport PageHeader from '../PageHeader'\r\nimport TopBar from '../TopBar'\r\nimport Footer from '../Footer'\r\n\r\nexport const PagePanel = styled.div`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background-color: #f9f9f9;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledMain = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  min-height: calc(100vh - ${props => props.theme.topBarSize*2}px);\r\n`;\r\n\r\nconst StyledContent = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - ${props => props.theme.topBarSize*2}px);\r\n`;\r\n\r\nconst StyledPage = styled.div`\r\n  background: linear-gradient(75deg,#f1f8f2,65%, #e0f8e4)\r\n`\r\n\r\nconst Page: React.FC = ({ children }) => {\r\n  return (\r\n    <StyledPage>\r\n      <TopBar/>\r\n      <StyledMain>\r\n        {children}\r\n      </StyledMain>\r\n      <Footer/>\r\n    </StyledPage>\r\n  )\r\n}\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Page\r\n","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\lib\\scripts.js",[],["899","900"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\number.ts",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\index.js",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\BlockTableRow\\index.tsx",["901"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TransactionTableRow\\index.tsx",["902"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\ValidatorTableRow\\index.tsx",["903","904"],"import React,{useState} from 'react'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Image,\r\n    Header,\r\n  } from 'semantic-ui-react'\r\n  import Skeleton from \"react-skeleton-loader\";\r\n  import {NavLink} from \"react-router-dom\";\r\n  import styled from \"styled-components\";\r\n  import snplogo from '../../assets/images/snp.png'\r\n  \r\n  interface  ValidatorTableRowProps{\r\n    data:any;\r\n    index?: any;\r\n }\r\n\r\n const StyledLink = styled(NavLink)`\r\n color: #4472de;\r\n font-size: 14px;\r\n text-decoration: none;\r\n`;\r\n\r\nconst ValidatorTableRow: React.FC<ValidatorTableRowProps> = ({index,data}) => {\r\n    return (\r\n        <Table.Row>\r\n\r\n            <Table.Cell >{data.moniker ? (\r\n                  <Header as='h4'>\r\n                    <Image src= {snplogo} size= 'tiny'/>\r\n                      {data.moniker}\r\n                  </Header>\r\n                ) : (\r\n                    <Skeleton width={\"80px\"}/>\r\n                )}\r\n            </Table.Cell>\r\n            <Table.Cell>{data.delegator_shares ? `${Number(data.delegator_shares).toFixed(4)}(${(Number(data.voting_power)/100).toFixed(2)+'%'})` : <Skeleton width={\"80px\"}/>}</Table.Cell>\r\n            <Table.Cell>{data.commission_rate ? <>{Number(data.commission_rate*100).toFixed(2)}%</> : <Skeleton width={\"40px\"}/>}</Table.Cell>\r\n            <Table.Cell>{data.status ? <Header as='h4' color='blue'>Bonded</Header> : <Skeleton width={\"40px\"}/>}</Table.Cell>\r\n            <Table.Cell>{data.moniker ? <Button color='twitter'>Delegate</Button> : <Skeleton width={\"80px\"}/>}</Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default ValidatorTableRow","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\ProposalTableRow\\index.tsx",["905","906"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\PageHeader\\index.tsx",["907","908","909","910","911","912","913","914"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\AppMenu\\index.tsx",["915","916","917","918","919","920","921","922","923"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Menu,Icon, Container, Dropdown,MenuItemProps,Divider,DropdownItemProps,Label,Header} from 'semantic-ui-react'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport {Media} from '../../utils/media'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n,{changeLanguage} from '../../utils/i18n'\r\nimport styled from 'styled-components'\r\nimport './index.css';\r\nimport Spacer from '../Spacer'\r\n\r\nconst StyledFooter = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n`;\r\n\r\n\r\nconst StyledLink = styled.a`\r\n  align-items: left;\r\n  display: flex;\r\n  justify-content: left;\r\n  margin: 0;\r\n  color: #0f0f0f;\r\n  font-weight: 700;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #5c5c5e;\r\n  }\r\n`;\r\n\r\nfunction Nav() {\r\n  return (\r\n    <StyledNav>\r\n      \r\n      {isMobile?(\r\n        <StyledLink  href=\"https://discord.gg/bNN5Ae\">\r\n          <Icon name= 'discord' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://discord.gg/bNN5Ae\">\r\n          <Icon  name= 'discord' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      )}\r\n\r\n    <Spacer size='md'/>\r\n      {isMobile?(\r\n        <StyledLink\r\n          href=\"https://github.com/Seele-N/NervLedger-Contract\"\r\n        >\r\n         <Icon name= 'telegram' size= 'large'  color='grey'/> \r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink\r\n          target=\"_blank\"\r\n          href=\"https://github.com/Seele-N/NervLedger-Contract\"\r\n        >\r\n          <Icon name= 'github' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      )}\r\n\r\n    <Spacer size='md'/>\r\n      {isMobile?(\r\n        <StyledLink  href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'twitter' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'twitter' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      )}\r\n\r\n    <Spacer size='md'/>\r\n      {isMobile?(\r\n        <StyledLink  href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'youtube' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'youtube' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      )}\r\n\r\n    <Spacer size='md'/>\r\n      {isMobile?(\r\n        <StyledLink  href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'medium' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      ):(\r\n        <StyledLink target=\"_blank\" href=\"https://twitter.com/NevrLedger\">\r\n          <Icon name= 'medium' size= 'large'  color='grey'/>\r\n        </StyledLink>\r\n      )}\r\n\r\n    </StyledNav>\r\n  );\r\n}\r\n\r\nconst Logo: React.FC = () => {\r\n    return (\r\n      <StyledLogo to=\"/\">\r\n        <img\r\n          src={logo}\r\n          height=\"40\"\r\n          style={{\r\n            marginTop: -4,\r\n          }}\r\n          alt=\"logo\"\r\n        />\r\n        <StyledText>Seele Wallet</StyledText>\r\n      </StyledLogo>\r\n    )\r\n  }\r\n  \r\n  const StyledLogo = styled(Link)`\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0;\r\n    min-height: 44px;\r\n    min-width: 44px;\r\n    padding: 0;\r\n    text-decoration: none;\r\n  `\r\n  \r\n  const StyledText = styled.span`\r\n    color: #070707;\r\n    text-decoration: none;\r\n    font-size: 22px;\r\n    font-weight: 900;\r\n    margin-left: 10px;\r\n\r\n  `\r\n\r\nconst StyledItem = styled.div`\r\n    align-items: left;\r\n    display: flex;\r\n    justify-content: left;\r\n    margin: 0;\r\n    text-decoration: none;\r\n  `\r\n\r\nconst AppMenu: React.FC = () => {\r\n    const [t] = useTranslation()\r\n    const [activeItem,setActiveItem] = useState('home')\r\n    const handleItemClick = (e:any, {name}:MenuItemProps) => {setActiveItem(name)}\r\n    \r\n    return (\r\n        <Menu borderless vertical stackable fixed='left' size='large' className= 'sidemenu'>\r\n            <Spacer size='sm'/>\r\n            <Spacer size='sm'/>\r\n            <Logo/>   \r\n            <Label color='teal'>\r\n                testnet-alpha\r\n            </Label>\r\n            <Divider/>\r\n            <Menu.Item name='home'\r\n            active={activeItem === 'home'}\r\n            as={Link}\r\n            to='/'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'chart pie' color= 'teal'/>Home</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item name='bridge'\r\n            active={activeItem === 'bridge'}\r\n            as={Link}\r\n            to='/bridge'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'block layout' color= 'teal'/>Bridge</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n\r\n\r\n            \r\n            <Menu.Item name='stake'\r\n            active={activeItem === 'stake'}\r\n            as={Link}\r\n            to='/stake'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'gem' color= 'teal'/>Stake</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n            <Menu.Item name='validators'\r\n            active={activeItem === 'validators'}\r\n            as={Link}\r\n            to='/validators'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'users' color= 'teal'/>Validators</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n            <Menu.Item name='governance'\r\n            active={activeItem === 'governance'}\r\n            as={Link}\r\n            to='/governance'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'university' color= 'teal'/>Governance</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n            <Menu.Item name='apps'\r\n            active={activeItem === 'apps'}\r\n            as={Link}\r\n            to='/apps'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'cloud' color= 'teal'/>Apps</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n            <Menu.Item name='setting'\r\n            active={activeItem === 'setting'}\r\n            as={Link}\r\n            to='/setting'\r\n            onClick = {handleItemClick}\r\n            >\r\n                <StyledItem>\r\n                    <Header as='h4'><Icon name= 'cog' color= 'teal'/>Setting</Header>\r\n                </StyledItem>\r\n            </Menu.Item>\r\n            <Divider/>\r\n            <Spacer size='sm'/>\r\n            <Nav/>\r\n            <Spacer size='sm'/>\r\n            <Divider/>\r\n            <p style={{fontSize: '15px', color: '#5f6061'}}>Copyright © seelen.pro</p>\r\n        </Menu>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AppMenu","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useTimer.js",["924"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useFetch\\useFetch.js",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\screen.ts",["925"],"export const isMobile = (width?: number) => (width || window.innerWidth) <= 750\r\n\r\nexport const isSmallMobile = () => window.innerWidth < 375\r\n\r\nexport const isMediumMobile = () => window.innerWidth >= 375 && window.innerWidth < 414\r\n\r\nexport const isLargeMobile = () => window.innerWidth >= 414 && window.innerWidth <= 750\r\n\r\nexport const isScreen750to1440 = () => window.innerWidth >= 750 && window.innerWidth < 1440\r\n\r\nexport const isScreenSmallerThan1200 = () => window.innerWidth <= 1200\r\n\r\nexport const isScreenSmallerThan1440 = () => window.innerWidth <= 1440\r\n\r\nexport default {\r\n  isMobile,\r\n  isSmallMobile,\r\n  isMediumMobile,\r\n  isLargeMobile,\r\n  isScreen750to1440,\r\n  isScreenSmallerThan1200,\r\n}\r\n","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\utils\\string.ts",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\hooks\\useFetch\\reducer.js",["926"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Welcome\\index.tsx",["927","928","929","930","931","932"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    List,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Label,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n  import logo from '../../assets/images/access-img.svg'\r\n  import Spacer from '../../components/Spacer'\r\n\r\n  const StyledImage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.p`\r\n  color: #2e2e2e;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color: #e2e1e1;\r\n  }\r\n`;\r\n\r\ninterface StyledButtonTextProps {\r\n    color: string;\r\n    hovercolor: string;\r\n  }\r\n\r\nconst StyledButtonText = styled.p<StyledButtonTextProps>`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color:${(props) => props.hovercolor};\r\n  }\r\n`;\r\n\r\nconst Welcome: React.FC = () => {\r\n  return (\r\n    <Container>\r\n        <Grid stackable columns={2} verticalAlign='middle'>\r\n            <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    <Container  textAlign='center'>\r\n                        <Header style={{fontSize: '48px',fontWeight: 1000}}>Welcome to SeeleWallet</Header>\r\n                    </Container>\r\n                    <Spacer size='sm'/>   \r\n                    <Container  textAlign='justified'> \r\n                        <p style={{fontSize: '18px', color: '#5f6061'}}>SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.</p>\r\n                    </Container>\r\n                    <Spacer size='lg'/>\r\n                    <Button color='twitter' size='huge' >\r\n                        <StyledButtonText color= '#fffafa' hovercolor= '#ffffff'>Import Your Wallet</StyledButtonText>\r\n                        </Button>\r\n                    <p style={{ fontSize: '16px',paddingBottom: '0.3em', paddingTop: '0.5em' }}>or</p>\r\n                    <Button color='teal' size='huge' as={Link} to='/newwalletstep1'>\r\n                        <StyledButtonText color= '#2e2e2e' hovercolor= '#e2e1e1'>Create New Wallet</StyledButtonText>\r\n                    </Button>\r\n                    \r\n                </Grid.Column>\r\n                <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    <StyledImage>\r\n                        <Image size='large' src={logo}></Image>\r\n                    </StyledImage>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        </Container>\r\n  )\r\n}\r\n\r\nexport default Welcome","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TopBar\\index.tsx",["933","934","935","936","937","938","939","940","941"],"\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Segment,\r\n    Menu,\r\n    Image,\r\n    Icon, \r\n    Container,\r\n    Dropdown,\r\n    MenuItemProps,\r\n    Sidebar,\r\n    SidebarProps} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\n\r\nconst StyledTopBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: ${(props) => props.theme.topBarSize}px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst Footnote = styled.div`\r\n  width: 100%;\r\n  font-size: 14px;\r\n  padding: 8px 20px;\r\n  color: #bdbdbd;\r\n  border-top:  solid 1px #bdbdbd;\r\n`;\r\n\r\nconst TopBar: React.FC = () => {\r\n    return (\r\n      <StyledTopBar>\r\n            <TopMenu/>\r\n            <Footnote/>\r\n      </StyledTopBar>\r\n    )\r\n  }\r\n\r\n  export default TopBar","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Dial\\index.tsx",["942"],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\Spacer\\index.tsx",[],"E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep1\\index.tsx",["943","944","945","946","947","948"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    List,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Label,\r\n  } from 'semantic-ui-react'\r\n  import styled from 'styled-components'\r\n  import {Link} from 'react-router-dom'\r\n  import Spacer from '../../components/Spacer'\r\n  import Warnimg from '../../assets/images/warn.png'\r\n\r\n  const StyledImage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.p`\r\n  color: #2e2e2e;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color: #e2e1e1;\r\n  }\r\n`;\r\n\r\ninterface StyledButtonTextProps {\r\n    color: string;\r\n    hovercolor: string;\r\n  }\r\n\r\nconst StyledButtonText = styled.p<StyledButtonTextProps>`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color:${(props) => props.hovercolor};\r\n  }\r\n`;\r\n\r\nconst StyledSegment = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CreateNewWalletStep1: React.FC = () => {\r\n  return (\r\n      <Container >\r\n          <StyledSegment>\r\n            <Spacer size='sm'/>\r\n            <Segment raised textAlign='center' style={{maxWidth: '600px',borderRadius: '18px',background: '#fff9f5'}}>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='center'>\r\n                    <Header as='h2'>CREATE NEW WALLET</Header>\r\n                </Container>\r\n                <Spacer size='sm'/>\r\n                <Image size='small' verticalAlign= 'middle'src={Warnimg}></Image>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='justified'> \r\n                    <p style={{fontSize: '18px', color: '#5f6061'}}>\r\n                        Your backup phrase contains all of the private keys within your wallet.\r\n                        Please write down these 12 words, in order, and keep them somewhere safe offline.\r\n                        This phrase will gives you (or anyone who has it) a way to restore your wallet \r\n                        and access your funds. In the event that you lose your password or our service \r\n                        is unavailable, this will be your safety net.</p>\r\n                </Container>\r\n                <Spacer size='md'/>\r\n                <Container  textAlign='justified'> \r\n                    <p style={{fontSize: '18px', color: '#e23517'}}>\r\n                    If you lose your recovery phrase, you will be unable to recover access to your account</p>\r\n                </Container>\r\n                <Spacer size='lg'/>\r\n                <Grid stackable columns={2} verticalAlign='middle'>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '8'>    \r\n                            <Button  size='large' as={Link} to='/welcome'>\r\n                                <StyledButtonText color= '#000000' hovercolor= '#000000'>Back</StyledButtonText>\r\n                            </Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '8' >\r\n                            <Button color='twitter' size='large' as={Link} to='/newwalletstep2'>\r\n                                <StyledButtonText color= '#fafafa' hovercolor= '#ffffff'>Next</StyledButtonText>\r\n                            </Button> \r\n                        </Grid.Column>\r\n                    </Grid.Row>  \r\n                </Grid>\r\n            </Segment>\r\n          </StyledSegment>\r\n     </Container>\r\n  )\r\n}\r\n\r\nexport default CreateNewWalletStep1","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep2\\index.tsx",["949","950","951","952","953"],"import React,{useState} from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    List,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Label,\r\n    Modal,\r\n  } from 'semantic-ui-react'\r\n  import styled from 'styled-components'\r\n  import {Link} from 'react-router-dom'\r\n  import Spacer from '../../components/Spacer'\r\n  import WriteNoteimg from '../../assets/images/WriteNote.png'\r\n\r\n  const StyledImage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.p`\r\n  color: #2e2e2e;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color: #e2e1e1;\r\n  }\r\n`;\r\n\r\ninterface StyledButtonTextProps {\r\n    color: string;\r\n    hovercolor: string;\r\n  }\r\n\r\nconst StyledButtonText = styled.p<StyledButtonTextProps>`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color:${(props) => props.hovercolor};\r\n  }\r\n`;\r\n\r\nconst StyledSegment = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CreateNewWalletStep2: React.FC = () => {\r\n\r\n    const [modalOpened ,setModalOpened ] = useState(false)\r\n\r\n  return (\r\n      <Container >\r\n          <StyledSegment>\r\n            <Spacer size='sm'/>\r\n            <Segment raised textAlign='center' style={{maxWidth: '600px',borderRadius: '18px',background: '#fff9f5'}}>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='center'>\r\n                    <Header as='h2'>RECOVERY PHRASE</Header>\r\n                </Container>\r\n                <Spacer size='md'/>\r\n                <Container  textAlign='left'>\r\n                    <Header as='h3'>Please back up recovery phrase</Header>\r\n                </Container>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='justified'> \r\n                    <p style={{fontSize: '18px', color: '#1f7dd4'}}>\r\n                    Back up the text below on paper and keep it somewhere secret and save.</p>\r\n                </Container>\r\n                <Header as='h5' color= 'teal' textAlign= 'right'>\r\n                    <Icon link name= 'sync alternate' color= 'teal' size= 'small'/>Reload\r\n                </Header>\r\n                <Segment secondary>\r\n                    <Spacer size='sm'/>\r\n                    <Grid columns={3} verticalAlign='middle'>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>1.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>2.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>3.aaaaa</p>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>4.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>5.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>6.aaaaa</p>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>7.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>8.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>9.aaaaa</p>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>10.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>11.aaaaa</p>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <p style={{fontSize: '18px', color: '#5f6061'}}>12.aaaaa</p>\r\n                            </Grid.Column>\r\n                        </Grid.Row>  \r\n                    </Grid>\r\n                    <Spacer size='sm'/>\r\n                </Segment>\r\n                <Spacer size='sm'/>\r\n                <Grid stackable columns={2} verticalAlign='middle'>\r\n                    <Grid.Row  verticalAlign='middle'>\r\n                        <Grid.Column width= '8'>    \r\n                            <Header as='h5' color= 'teal' textAlign= 'left'>\r\n                                <Icon link name= 'save' color= 'teal' />Save as KeyStore\r\n                            </Header>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '8' >\r\n                            <Header as='h5' color= 'teal' textAlign= 'right'>\r\n                                <Icon link name= 'save' color= 'teal' />View Private Key\r\n                            </Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Spacer size='md'/>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '8'>    \r\n                            <Button  size='large' as={Link} to='/newwalletstep1'>\r\n                                <StyledButtonText color= '#000000' hovercolor= '#000000'>Back</StyledButtonText>\r\n                            </Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '8' >\r\n                            <Button color='twitter' size='large' \r\n                            onClick= {()=>{\r\n                                setModalOpened(true)\r\n                            }}>\r\n                                <StyledButtonText color= '#fafafa' hovercolor= '#ffffff'>Next</StyledButtonText>\r\n                            </Button> \r\n                        </Grid.Column>\r\n                    </Grid.Row>  \r\n                </Grid>\r\n            </Segment>\r\n          </StyledSegment>\r\n          <Modal\r\n            onClose={() => setModalOpened(false)}\r\n            onOpen={() => setModalOpened(true)}\r\n            open={modalOpened}\r\n            size= 'tiny'\r\n            >\r\n            <Modal.Header style={{background: '#fff9f5'}}>RECOVERY PHRASE?</Modal.Header>\r\n            <Modal.Content image style={{background: '#fff9f5'}}>\r\n                <Image size='medium' src={WriteNoteimg} wrapped />\r\n                <Modal.Description>\r\n                <p style={{fontSize: '18px', color: '#5f6061'}}>Are you sure you have noted down your Recovery Phrase?</p>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions style={{background: '#fff9f5'}}>\r\n                <Button onClick={() => setModalOpened(false)}>Cancel</Button>\r\n                <Button as={Link} to='/newwalletstep3' onClick={() => setModalOpened(false)} positive>Ok</Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n     </Container>\r\n  )\r\n}\r\n\r\nexport default CreateNewWalletStep2","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep3\\index.tsx",["954","955","956","957","958"],"import React,{useState} from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    List,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Label,\r\n    Modal,\r\n  } from 'semantic-ui-react'\r\n  import styled from 'styled-components'\r\n  import {Link} from 'react-router-dom'\r\n  import Spacer from '../../components/Spacer'\r\n  import WriteNoteimg from '../../assets/images/WriteNote.png'\r\n\r\n  const StyledImage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.p`\r\n  color: #2e2e2e;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color: #e2e1e1;\r\n  }\r\n`;\r\n\r\ninterface StyledButtonTextProps {\r\n    color: string;\r\n    hovercolor: string;\r\n  }\r\n\r\nconst StyledButtonText = styled.p<StyledButtonTextProps>`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color:${(props) => props.hovercolor};\r\n  }\r\n`;\r\n\r\nconst StyledSegment = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CreateNewWalletStep3: React.FC = () => {\r\n\r\n    const [modalOpened ,setModalOpened ] = useState(false)\r\n\r\n  return (\r\n      <Container >\r\n          <StyledSegment>\r\n            <Spacer size='sm'/>\r\n            <Segment raised textAlign='center' style={{maxWidth: '600px',borderRadius: '18px',background: '#fff9f5'}}>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='center'>\r\n                    <Header as='h2'>VERIFICATION</Header>\r\n                </Container>\r\n                <Spacer size='md'/>\r\n                <Container  textAlign='center'>\r\n                    <Header as='h4' style={{color: '#5f6061'}}>\r\n                        Verify your Recovery Phrase. Choose each word in the correct order\r\n                    </Header>\r\n                </Container>\r\n                <Spacer size='sm'/>\r\n                \r\n                <Segment secondary>\r\n                    <Spacer size='sm'/>\r\n                    <Grid columns={3} verticalAlign='middle'>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    1.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    2.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    3.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    4.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    5.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    6.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    7.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    8.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    9.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    10.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    11.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                            <Grid.Column width= '5'> \r\n                                <Header as='h4' color= 'teal' textAlign= 'left'>\r\n                                    12.aaaaa\r\n                                    <Icon link name= 'remove' color= 'teal' size= 'tiny'/>\r\n                                </Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>  \r\n                    </Grid>\r\n                    <Spacer size='sm'/>\r\n                </Segment>\r\n\r\n                <Grid columns={3} verticalAlign='middle'>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaa</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>bbb</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaabbcc</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaa</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>bbb</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaabbcc</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaa</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>bbb</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaabbcc</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaa</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>bbb</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '5'> \r\n                            <Button  basic size='small' style={{width: '100px'}}>aaaaabbcc</Button>\r\n                        </Grid.Column>\r\n                    </Grid.Row>  \r\n                </Grid>\r\n\r\n                <Spacer size='lg'/>\r\n                <Grid stackable columns={2} verticalAlign='middle'>\r\n                    <Grid.Row textAlign='center' verticalAlign='middle'>\r\n                        <Grid.Column width= '8'>    \r\n                            <Button  size='large' as={Link} to='/newwalletstep2'>\r\n                                <StyledButtonText color= '#000000' hovercolor= '#000000'>Back</StyledButtonText>\r\n                            </Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '8' >\r\n                            <Button color='twitter' size='large' \r\n                            as={Link} to='/newwalletstep4'\r\n                            onClick= {()=>{\r\n                                setModalOpened(true)\r\n                            }}>\r\n                                <StyledButtonText color= '#fafafa' hovercolor= '#ffffff'>Verify</StyledButtonText>\r\n                            </Button> \r\n                        </Grid.Column>\r\n                    </Grid.Row>  \r\n                </Grid>\r\n            </Segment>\r\n          </StyledSegment>\r\n          <Modal\r\n            onClose={() => setModalOpened(false)}\r\n            onOpen={() => setModalOpened(true)}\r\n            open={modalOpened}\r\n            size= 'tiny'\r\n            >\r\n            <Modal.Header style={{background: '#fff9f5'}}>RECOVERY PHRASE?</Modal.Header>\r\n            <Modal.Content image style={{background: '#fff9f5'}}>\r\n                <Image size='medium' src={WriteNoteimg} wrapped />\r\n                <Modal.Description>\r\n                <p style={{fontSize: '18px', color: '#5f6061'}}>Are you sure you have noted down your Recovery Phrase?</p>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions style={{background: '#fff9f5'}}>\r\n                <Button onClick={() => setModalOpened(false)}>Cancel</Button>\r\n                <Button onClick={() => setModalOpened(false)} positive>Ok</Button>\r\n            </Modal.Actions>\r\n            </Modal>\r\n     </Container>\r\n  )\r\n}\r\n\r\nexport default CreateNewWalletStep3","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\CreateNewWalletStep4\\index.tsx",["959","960","961","962","963","964","965"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    List,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Button,\r\n    Label,\r\n  } from 'semantic-ui-react'\r\n  import styled from 'styled-components'\r\n  import {Link} from 'react-router-dom'\r\n  import Spacer from '../../components/Spacer'\r\n  import Successimg from '../../assets/images/success-kid.png'\r\n\r\n  const StyledImage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledLink = styled.p`\r\n  color: #2e2e2e;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color: #e2e1e1;\r\n  }\r\n`;\r\n\r\ninterface StyledButtonTextProps {\r\n    color: string;\r\n    hovercolor: string;\r\n  }\r\n\r\nconst StyledButtonText = styled.p<StyledButtonTextProps>`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  padding-left: 36px;\r\n  padding-right: 36px;\r\n  &:hover {\r\n    color:${(props) => props.hovercolor};\r\n  }\r\n`;\r\n\r\nconst StyledSegment = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CreateNewWalletStep4: React.FC = () => {\r\n  return (\r\n      <Container >\r\n          <StyledSegment>\r\n            <Spacer size='sm'/>\r\n            <Segment raised textAlign='center' style={{maxWidth: '600px',borderRadius: '18px',background: '#fff9f5'}}>\r\n                <Spacer size='sm'/>\r\n                <Container  textAlign='center'>\r\n                    <Header as='h2'>SUCCESSFUL</Header>\r\n                </Container>\r\n                <Spacer size='sm'/>\r\n                <Image size='small' verticalAlign= 'middle'src={Successimg}></Image>\r\n                <Spacer size='md'/>\r\n                <Container  textAlign='center'> \r\n                    <p style={{fontSize: '18px', color: '#5f6061'}}>\r\n                    You've created your new wallet successfully</p>\r\n                </Container>\r\n                \r\n                <Spacer size='lg'/>\r\n                <Button color='twitter' size='large' as={Link} to='/newwalletstep2'>\r\n                    <StyledButtonText color= '#fafafa' hovercolor= '#ffffff'>Access your wallet now</StyledButtonText>\r\n                </Button>\r\n                \r\n            </Segment>\r\n          </StyledSegment>\r\n     </Container>\r\n  )\r\n}\r\n\r\nexport default CreateNewWalletStep4","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\SideBar\\index.tsx",["966","967","968","969","970","971","972","973","974"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Segment,\r\n    Menu,\r\n    Image,\r\n    Icon, \r\n    Container,\r\n    Dropdown,\r\n    MenuItemProps,\r\n    Sidebar,\r\n    SidebarProps} from 'semantic-ui-react'\r\nimport AppMenu from '../AppMenu'\r\n\r\nconst StyledSideBar = styled.div`\r\n\r\n  flex-direction: column;\r\n  display: flex;\r\n  height: calc(100%);\r\n  min-width: 252px;\r\n  background: #f2f7f5;\r\n  flex-wrap: wrap;\r\n  text-align: center;\r\n  box-shadow: 0px 12px 29px -10px rgba(17, 139, 128, 0.25);\r\n\r\n`\r\n/*\r\nconst StyledSideBar = styled.div`\r\n  align-items: stretch;\r\n  flex-direction: column;\r\n  display: flex;\r\n  height: calc(100%);\r\n  min-height: calc(100%);\r\n  width: 252px;\r\n  flex-wrap: wrap;\r\n  background: #1c3e83;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  color:#1c3e83;\r\n  float: left;\r\n`\r\n*/\r\n//<AppMenu/>\r\nconst SideBar: React.FC = () => {\r\n    return (\r\n      <StyledSideBar>\r\n        <AppMenu/>\r\n      </StyledSideBar>\r\n    )\r\n  }\r\n\r\n  export default SideBar","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\TopMenu\\index.tsx",["975","976","977","978","979","980","981","982","983"],"\r\nimport React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Menu,Image, Container, Dropdown,MenuItemProps,DropdownItemProps,Label,Header} from 'semantic-ui-react'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport {Media} from '../../utils/media'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n,{changeLanguage} from '../../utils/i18n'\r\nimport styled from 'styled-components'\r\n\r\nconst Logo: React.FC = () => {\r\n    return (\r\n      <StyledLogo to=\"/\">\r\n        <img\r\n          src={logo}\r\n          height=\"40\"\r\n          style={{\r\n            marginTop: -4,\r\n          }}\r\n          alt=\"logo\"\r\n        />\r\n        <StyledText>Seele Wallet</StyledText>\r\n      </StyledLogo>\r\n    )\r\n  }\r\n  \r\n  const StyledLogo = styled(Link)`\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0;\r\n    min-height: 44px;\r\n    min-width: 44px;\r\n    padding: 0;\r\n    text-decoration: none;\r\n  `\r\n  \r\n  const StyledText = styled.span`\r\n    color: #070707;\r\n    text-decoration: none;\r\n    font-size: 22px;\r\n    font-weight: 900;\r\n    margin-left: 10px;\r\n\r\n  `\r\n\r\nconst TopMenu: React.FC = () => {\r\n    const [t] = useTranslation()\r\n    const [activeItem,setActiveItem] = useState('home')\r\n    const handleItemClick = (e:any, {name}:MenuItemProps) => {setActiveItem(name)}\r\n    const handleDropdownItemClick = (e:any, {value}:DropdownItemProps) => {setActiveItem(value.toString())}\r\n    return (\r\n      <Menu borderless secondary size='large'>\r\n        <Container>\r\n            <Logo/>\r\n            {!isMobile() && (\r\n                        <Menu.Item position='right'>\r\n                            <Dropdown item simple  text={i18n.t('menu.language')}>\r\n                                <Dropdown.Menu direction='left'>\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('en')\r\n                                        }} >English</Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('zh')\r\n                                        }} >中文</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Item>\r\n                )\r\n            }\r\n            {isMobile() && (\r\n                <Dropdown item simple text={i18n.t('menu.language')}>\r\n                    <Dropdown.Menu direction='left'>\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('en')\r\n                            }} >English</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('zh')\r\n                            }} >中文</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            )}\r\n        </Container>\r\n      </Menu>\r\n    )\r\n}\r\nexport default TopMenu","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\PageApp\\index.tsx",["984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000"],"import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport {Segment,Menu,Image,Icon, Container, Dropdown,MenuItemProps,Sidebar,SidebarProps} from 'semantic-ui-react'\r\nimport {Media} from '../../utils/media'\r\nimport logo from '../../assets/images/seelen.png'\r\nimport AppMenu from '../AppMenu'\r\nimport PageHeader from '../PageHeader'\r\nimport AppTopBar from '../AppTopBar'\r\nimport SideBar from '../SideBar'\r\nimport Footer from '../Footer'\r\n\r\nexport const PagePanel = styled.div`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background-color: #f9f9f9;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledMain = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: calc(100vh);\r\n  height: calc(100%);\r\n  width: calc(100%);\r\n  margin-left: 12px;\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst StyledPage = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: calc(100%);\r\n  width: calc(100%);\r\n  background: linear-gradient(75deg,#f1f8f2,75%, #e0f8e4)\r\n`\r\n\r\nconst StyledChildren = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: calc(100vh-${(props) => props.theme.topBarSize+12}px);\r\n  width: calc(100%);\r\n  margin-top: ${(props) => props.theme.topBarSize+12}px;\r\n`;\r\n\r\nconst PageApp: React.FC = ({ children }) => {\r\n  return (\r\n    <StyledPage>\r\n        <SideBar/>\r\n        <StyledMain>\r\n            <AppTopBar/>\r\n            <StyledChildren>\r\n            {children}\r\n            </StyledChildren>\r\n        </StyledMain>\r\n    </StyledPage>\r\n  )\r\n}\r\n\r\n\r\nexport default PageApp\r\n","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\components\\AppTopBar\\index.tsx",["1001","1002","1003","1004","1005","1006","1007","1008","1009","1010"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { isMobile, isScreen750to1440 } from '../../utils/screen'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n,{changeLanguage} from '../../utils/i18n'\r\nimport {Segment,\r\n    Menu,\r\n    Image,\r\n    Icon, \r\n    Container,\r\n    Dropdown,\r\n    MenuItemProps,\r\n    Sidebar,\r\n    SidebarProps} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\n\r\nconst StyledTopBar = styled.div`\r\n  position: fixed;\r\n  z-index: 90;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: right;\r\n  height: ${(props) => props.theme.topBarSize}px;\r\n  min-height: ${(props) => props.theme.topBarSize}px;\r\n  width: 100%;\r\n  box-shadow: 0px 2px 8px rgba(48, 64, 79, 0.25);\r\n`\r\n\r\nconst AppTopBar: React.FC = () => {\r\n    return (\r\n      <StyledTopBar>\r\n            <Segment  attached= 'top' style={{margin: 0,height: '100%'}}>\r\n            <Menu borderless secondary size='large' fixed= 'top'>\r\n            {!isMobile() && (\r\n                        <Menu.Item position='right'>\r\n                            <Dropdown item icon={{name:'user circle',size:'big'}}>\r\n                                <Dropdown.Menu direction='left'>\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('en')\r\n                                        }} >English</Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                                        changeLanguage('zh')\r\n                                        }} >中文</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Item>\r\n                )\r\n            }\r\n            {isMobile() && (\r\n                <Dropdown item icon={{name:'user circle',size:'big'}}>\r\n                    <Dropdown.Menu direction='left'>\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('en')\r\n                            }} >English</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item as={Link}  value='transactions' onClick = {()=>{\r\n                            changeLanguage('zh')\r\n                            }} >中文</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            )}\r\n      </Menu>\r\n      </Segment>\r\n      </StyledTopBar>\r\n    )\r\n  }\r\n\r\n  export default AppTopBar","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Bridge\\index.tsx",["1011","1012","1013","1014","1015"],"import React,{useState} from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n    Button,\r\n    Dropdown,\r\n    Input,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import switchimg from '../../assets/images/switch.svg'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 414px;\r\n  align-content: center;\r\n`;\r\n\r\nconst tokenOptions = [\r\n    {\r\n      key: 'snp',\r\n      text: 'SNP',\r\n      value: 'snp',\r\n      image: {  avatar: true,src: snplogo },\r\n    },\r\n    {\r\n      key: 'seele',\r\n      text: 'SEELE',\r\n      value: 'seele',\r\n      image: {  avatar: true,src: seelelogo },\r\n    },\r\n  ]\r\n\r\ninterface PanProps {\r\n    isFrom?: boolean;\r\n  }\r\n\r\nconst EthPan: React.FC<PanProps> = ({isFrom = false}) => {\r\n    return (\r\n        <Segment>\r\n            <Header as ='h4'>Network:Ethereum</Header>\r\n            <Divider/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingTop: '0.5em' }}>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        {\r\n                            isFrom?(<Header as='h6' color= 'grey'  textAlign='left'>Balance:2.52713</Header>):null\r\n                        }\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h6' color= 'grey' textAlign='right'>Token</Header>\r\n                    </Grid.Column>\r\n                    \r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n            <Spacer size='sm'/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row  verticalAlign='middle' style={{ paddingTop: '0.5em' }}>\r\n                    <Grid.Column width= '6' textAlign= 'left' style={{ padding: '0px' }}>\r\n                        {\r\n                            isFrom?(\r\n                                <Input   inverted size='massive' placeholder='0'  style={{maxWidth:'180px'}} input={{fontSize: '30px',fontWeight:500}} />\r\n                            ):(\r\n                                <Header as='h2' style={{ paddingLeft: '1em' }}>\r\n                                    2\r\n                                </Header>\r\n                            )\r\n                        }\r\n                        \r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign= 'right'  width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    {\r\n                        isFrom?(\r\n                            <div>\r\n                            <Button color='violet' size= 'mini' style={{marginRight:'1em',marginLeft:'1em'}}>Max</Button>\r\n                            <Dropdown\r\n                                inline\r\n                                options={tokenOptions}\r\n                                defaultValue={tokenOptions[0].value}\r\n                            />\r\n                            </div>\r\n                        ):(\r\n                            <Header as='h4'>\r\n                                <Image src= {snplogo} size= 'tiny'/>SNP\r\n                            </Header>\r\n                        )\r\n                    }\r\n                    \r\n                    </Grid.Column>\r\n                    \r\n                </Grid.Row>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nconst SeelePan: React.FC<PanProps> = ({isFrom = false}) => {\r\n    return (\r\n        <Segment>\r\n            <Header as='h4'>Network:Seele</Header>\r\n            <Divider/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingTop: '0.5em' }}>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    {\r\n                            isFrom?(<Header as='h6' color= 'grey'  textAlign='left'>Balance:2.52713</Header>):null\r\n                    }\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h6' color= 'grey' textAlign='right'>Token</Header>\r\n                    </Grid.Column>\r\n                    \r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n            <Spacer size='sm'/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row  verticalAlign='middle' style={{ paddingTop: '0.5em' }}>\r\n                    <Grid.Column width= '6' textAlign= 'left' style={{ padding: '0px' }}>\r\n                    {\r\n                            isFrom?(\r\n                                <Input   inverted size='massive' placeholder='0'  style={{maxWidth:'180px'}} input={{fontSize: '30px',fontWeight:500}} />\r\n                            ):(\r\n                                <Header as='h2' style={{ paddingLeft: '1em' }}>\r\n                                    2\r\n                                </Header>\r\n                            )\r\n                        }\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign= 'right'  width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    {\r\n                        isFrom?(\r\n                            <div>\r\n                            <Button color='violet' size= 'mini' style={{marginRight:'1em',marginLeft:'1em'}}>Max</Button>\r\n                            <Dropdown\r\n                                inline\r\n                                options={tokenOptions}\r\n                                defaultValue={tokenOptions[0].value}\r\n                            />\r\n                            </div>\r\n                        ):(\r\n                            <Header as='h4'>\r\n                                <Image src= {snplogo} size= 'tiny'/>SNP\r\n                            </Header>\r\n                        )\r\n                    }\r\n                    \r\n                    </Grid.Column>\r\n                    \r\n                </Grid.Row>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nconst Bridge: React.FC = () => {\r\n  const [isFromEth,setIsFromEth] = useState(true)\r\n  return (\r\n    <div>\r\n        <Spacer/>\r\n        <StyledSegment raised >\r\n            <Container textAlign= 'center' style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n                {\r\n                    isFromEth?(\r\n                        <div>\r\n                            <EthPan isFrom/>\r\n                            <Button circular color='facebook' icon={{name: 'exchange',rotated: 'clockwise'}} \r\n                            onClick= {()=>setIsFromEth(false)}\r\n                            />\r\n                            <SeelePan/>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                            <SeelePan isFrom/>\r\n                            <Button circular color='facebook' icon={{name: 'exchange',rotated: 'clockwise'}} \r\n                            onClick= {()=>setIsFromEth(true)}\r\n                            />\r\n                            <EthPan/>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <Spacer size='sm'/>\r\n                <Grid stackable columns={2} verticalAlign='middle'>\r\n                    <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingTop: '1em' }}>\r\n                        <Grid.Column width= '7' style={{  paddingTop: '0.5em' }}>\r\n                            <Header as='h4' color= 'grey'>Slippage Tolerance</Header>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '9' style={{  paddingTop: '0.5em' }}>\r\n                            <Header as='h4' color= 'teal'  textAlign='right'>3.00%</Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingBottom: '0.5em',paddingTop: '0em' }}>\r\n                        <Grid.Column width= '7' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                            <Header as='h4' color= 'grey'>Minimum Received</Header>\r\n                        </Grid.Column>\r\n                        <Grid.Column width= '9' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                            <Header as='h4' color= 'teal' textAlign='right'>1.94</Header>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n                <Divider/>\r\n                <Button color='twitter' size= 'large' style={{ width: '100%' }}>Transfer</Button>\r\n            </Container>\r\n        </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bridge","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Stake\\index.tsx",["1016","1017","1018","1019","1020","1021","1022","1023"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n    Tab,\r\n    Menu,\r\n    Label,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: { key: 'rewards', icon: 'gem outline', content: 'Stake Rewards' },\r\n      pane: (\r\n        <Tab.Pane key='rewards'>\r\n            <Header color= 'grey' as= 'h5'>Widthdraw rewards from delegated funds</Header>\r\n            <Table striped  unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Validator Address</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Reward  Amount</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Action</Header></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Footer fullWidth>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='3' textAlign='center'>\r\n                            <Header color= 'grey' as= 'h5' icon>\r\n                                <Icon name='folder open outline' size = 'large'/>\r\n                                No Data\r\n                            </Header>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n            </Table>\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n        menuItem: { key: 'delegate', icon: 'bookmark outline', content: 'Delegate Funds' },\r\n        pane: (\r\n          <Tab.Pane key='delegate'>\r\n              Tab 2 Content\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n  ]\r\n  \r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\nconst Stake: React.FC = () => {\r\n    \r\n  return (\r\n    <div>\r\n        <Spacer/>\r\n        <StyledSegment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >Stake</Header>\r\n            <Divider/>\r\n            <Tab panes={panes} renderActiveOnly={false}/>\r\n            </Container>\r\n        </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stake","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Governance\\index.tsx",["1024","1025","1026","1027","1028","1029"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n    Tab,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: { key: 'all', content: 'All' },\r\n      pane: (\r\n        <Tab.Pane key='all'>\r\n            <Table striped  unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Title</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Time</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Status</Header></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Footer fullWidth>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='3' textAlign='center'>\r\n                            <Header color= 'grey' as= 'h5' icon>\r\n                                <Icon name='folder open outline' size = 'large'/>\r\n                                No Data\r\n                            </Header>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n            </Table>\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n        menuItem: { key: 'Deposit',  content: 'Deposit' },\r\n        pane: (\r\n          <Tab.Pane key='Deposit'>\r\n              Tab 2 Content\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n    {\r\n        menuItem: { key: 'Voting',  content: 'Voting' },\r\n        pane: (\r\n          <Tab.Pane key='Voting'>\r\n              Tab 2 Content\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n    {\r\n        menuItem: { key: 'Passed',  content: 'Passed' },\r\n        pane: (\r\n          <Tab.Pane key='Passed'>\r\n              Tab 2 Content\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n    {\r\n        menuItem: { key: 'Rejected',  content: 'Rejected' },\r\n        pane: (\r\n          <Tab.Pane key='Rejected'>\r\n              Tab 2 Content\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n  ]\r\n\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\nconst Governance: React.FC = () => {\r\n    \r\n  return (\r\n    <div>\r\n      <Spacer/>\r\n    <StyledSegment raised>\r\n        <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n        <Header as='h3' >Governance</Header>\r\n        <Divider/>\r\n        <Header color= 'grey' as= 'h5'>You may see all proposals and cast your votes here.</Header>\r\n        <Tab panes={panes} renderActiveOnly={false}/>\r\n        </Container>\r\n    </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Governance","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Apps\\index.tsx",["1030","1031","1032"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n\r\n\r\nconst Apps: React.FC = () => {\r\n    \r\n  return (\r\n    <div>\r\n        <Spacer/>\r\n        <Segment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >Account Details</Header>\r\n            <Divider/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4'>Seele Chain</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4' style={{ borderBottom: '1px dotted #000',display: 'inline-block'}}>seele1ca6t02quxh9wcdc6vnaatwr8f8s5cxdsqk44wx<Icon name= 'copy outline'/></Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4'>Ethereum Chain</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4' style={{ borderBottom: '1px dotted #000',display: 'inline-block'}}>0x264567b2f06D419093313ae8539fb40167Ba349C<Icon name= 'copy outline'/></Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            </Container>\r\n        </Segment>\r\n        <Segment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >Apps</Header>\r\n                <Table striped  unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>Token</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>Ethereum Mainnet</Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ fontSize: '1.12em' }}>Seele Chain</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell >\r\n                            <Header as='h4'>\r\n                                <Image src= {snplogo} size= 'tiny'/>\r\n                                SNP\r\n                            </Header>\r\n                        </Table.Cell>\r\n                        <Table.Cell ><p style={{fontSize: '16px', fontWeight: 700, color: 'teal'}}>1,088.1800</p></Table.Cell>\r\n\r\n                        <Table.Cell><p style={{fontSize: '16px', fontWeight: 700,color: 'teal'}}>682.28</p></Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell >\r\n                            <Header as='h4'>\r\n                                <Image src= {seelelogo} size= 'tiny'/>\r\n                                SEELE\r\n                            </Header>\r\n                        </Table.Cell>\r\n\r\n                        <Table.Cell ><p style={{fontSize: '16px', fontWeight: 700,color: 'teal'}}>1,036,598.2300</p></Table.Cell>\r\n                        \r\n                        <Table.Cell><p style={{fontSize: '16px', fontWeight: 700,color: 'teal'}}>36,598.2300</p></Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n                </Table>\r\n            </Container>\r\n        </Segment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Apps","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Home\\index.tsx",["1033"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n    Statistic,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\nconst Home: React.FC = () => {\r\n    \r\n  return (\r\n    <div>\r\n        <Spacer/>\r\n        <StyledSegment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >Account Details</Header>\r\n            <Divider/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4' color= 'grey'>Seele Chain</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as={Link} color= 'teal'  style={{ fontSize: '16px',borderBottom: '1px dotted #000',display: 'inline-block'}}>seele1ca6t02quxh9wcdc6vnaatwr8f8s5cxdsqk44wx<Icon name= 'copy outline'/></Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row textAlign='left' verticalAlign='middle'>\r\n                    <Grid.Column width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as='h4' color= 'grey'>Evm Address</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Header as={Link} color= 'teal' style={{ fontSize: '16px',borderBottom: '1px dotted #000',display: 'inline-block'}}>0x264567b2f06D419093313ae8539fb40167Ba349C<Icon name= 'copy outline'/></Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n            </Container>\r\n        </StyledSegment>\r\n        <StyledSegment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >My Balances</Header>\r\n                <Table striped  unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Token</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Ethereum Mainnet</Header></Table.HeaderCell>\r\n                    <Table.HeaderCell  ><Header color= 'grey' as= 'h5'>Seele Chain</Header></Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell >\r\n                            <Header as='h4'>\r\n                                <Image src= {snplogo} size= 'tiny'/>\r\n                                SNP\r\n                            </Header>\r\n                        </Table.Cell>\r\n                        <Table.Cell ><Statistic color='teal' size= 'mini'><Statistic.Value>1,088.1800</Statistic.Value></Statistic></Table.Cell>\r\n\r\n                        <Table.Cell><Statistic color='teal' size= 'mini'><Statistic.Value>682.28</Statistic.Value></Statistic></Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell >\r\n                            <Header as='h4'>\r\n                                <Image src= {seelelogo} size= 'tiny'/>\r\n                                SEELE\r\n                            </Header>\r\n                        </Table.Cell>\r\n\r\n                        <Table.Cell ><Statistic color='teal' size= 'mini'><Statistic.Value>1,036,598.2300</Statistic.Value></Statistic></Table.Cell>\r\n                        \r\n                        <Table.Cell><Statistic color='teal' size= 'mini'><Statistic.Value>36,598.2300</Statistic.Value></Statistic></Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n                </Table>\r\n            </Container>\r\n        </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Setting\\index.tsx",["1034","1035","1036","1037","1038","1039","1040","1041","1042"],"import React from 'react'\r\nimport {\r\n    Container,\r\n    Segment,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    Table,\r\n    Icon,\r\n    Divider,\r\n    Tab,\r\n    Menu,\r\n    Label,\r\n    Button,\r\n    Input,\r\n  } from 'semantic-ui-react'\r\n  import {Link} from 'react-router-dom'\r\n  import styled from 'styled-components'\r\n\r\n  import seelelogo from '../../assets/images/seelen.png'\r\n  import snplogo from '../../assets/images/snp.png'\r\n  import Spacer from '../../components/Spacer'\r\n  import i18n from '../../utils/i18n'\r\n\r\n  const panes = [\r\n    {\r\n      menuItem: { key: 'config', icon: 'configure', content: 'Config' },\r\n      pane: (\r\n        <Tab.Pane key='config'>\r\n            <Header color= 'black' as= 'h5'>Node URL</Header>\r\n            <Input size='large'  placeholder='Search...' style={{width:'100%'}}/>\r\n            <Header color= 'black' as= 'h5'>Chain Explorer URL</Header>\r\n            <Input size='large'  placeholder='Search...' style={{width:'100%'}}/>\r\n\r\n            <Spacer size='md'/>\r\n            <Grid stackable columns={2} verticalAlign='middle'>\r\n                <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingTop: '1em' }}>\r\n                    <Grid.Column width= '8' style={{  paddingTop: '0.5em' }}>\r\n                        <Header color= 'black' as= 'h5'>Network Fee</Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '8' style={{  paddingTop: '0.5em' }}>\r\n                        <Header color= 'black' as= 'h5'>Gas Limit</Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row textAlign='left' verticalAlign='middle' style={{ paddingBottom: '0.5em',paddingTop: '0em' }}>\r\n                    <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Input size='large'  placeholder='10000' style={{width:'100%'}}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    <Input size='large'  placeholder='300000' style={{width:'100%'}}/>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Spacer size='md'/>\r\n                <Grid.Row textAlign='center' verticalAlign='middle' style={{ paddingBottom: '0.5em',paddingTop: '0em' }}>\r\n                    <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Button size='large' color='twitter' style={{ width: '70%' }}>Save</Button>\r\n                    </Grid.Column>\r\n                    <Grid.Column width= '8' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                        <Button size='large' style={{ width: '70%' }}>Discard Changes</Button>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n        menuItem: { key: 'clear', icon: 'redo', content: 'Clear Storage' },\r\n        pane: (\r\n          <Tab.Pane key='clear'>\r\n              <Header color= 'grey' as= 'h5'>Once you clear the storge,you will lose access to all your wallets.\r\n                The only way to regain wallet access is by restoring wallet mnemonic phrase.\r\n              </Header>\r\n              <Spacer size='md'/>\r\n              <Button size='big' color= 'red'>Clear Storage</Button>\r\n          </Tab.Pane>\r\n        ),\r\n    },\r\n  ]\r\n  \r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\nconst Setting: React.FC = () => {\r\n    \r\n  return (\r\n    <div>\r\n        <Spacer/>\r\n        <StyledSegment raised>\r\n            <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n            <Header as='h3' >Setting</Header>\r\n            <Divider/>\r\n            <Tab panes={panes} renderActiveOnly={false}/>\r\n            </Container>\r\n        </StyledSegment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Setting","E:\\workspace\\seelechainprojects\\SeeleWallet\\src\\pages\\Proposal\\index.tsx",["1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057"],"import React from 'react'\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Image,\r\n  Table,\r\n  Icon,\r\n  Button,\r\n  Pagination,\r\n  PaginationProps,\r\n  Statistic,\r\n  Divider,\r\n  Label,\r\n  Progress,\r\n} from 'semantic-ui-react'\r\nimport { useParams,Link } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport {useFetch, useTimer} from \"../../hooks\";\r\nimport constants from \"../../constants\";\r\nimport ValidatorTableRow from \"../../components/ValidatorTableRow\";\r\nimport {_,empty} from \"../../lib/scripts\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from '../../utils/i18n'\r\nimport Spacer from '../../components/Spacer'\r\n\r\n\r\nconst PAGE_SIZE:number = 10;\r\nvar   blockbefore = 0\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 768px;\r\n  @media (max-width: 1432px) {\r\n    max-width: 768px;\r\n  };\r\n  @media (max-width: 1050px) {\r\n    max-width: 485px;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n    id: string;\r\n  }\r\n\r\nconst Proposal: React.FC = () => {\r\n\r\n    const params = useParams<RouteParams>();\r\n    const [data, requestFetch] = useFetch(`${constants.API_BASE}${constants.API.PROPOSAL}/${params.id}`, \"get\");\r\n\r\n    React.useEffect(() => {\r\n\t\trequestFetch();\r\n\t}, [requestFetch]);\r\n\r\n  return (\r\n    <StyledSegment raised>\r\n      <Container style={{ padding: '1em 1em',background: '#f2f7f5' }}>\r\n      <Header as={Link} color='blue' to='/governance'><Icon name='arrow left'></Icon>Back to Proposal List</Header>\r\n      <Divider/>\r\n      <Grid stackable columns={2} verticalAlign='top'>\r\n            <Grid.Row textAlign='left' verticalAlign='top' style={{ paddingTop: '0.5em' }}>\r\n                <Grid.Column width= '10' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    <Header as='h2'>Enable IBC on Seele Chain Mainnet #ID-1</Header>\r\n                    <Label color='teal'>Voting PERIOD</Label>\r\n                    <Header as='h4' style={{ paddingBottom: '0em', paddingTop: '0em',marginTop:'1em',marginBottom:'0px'}}>Start:17/04/2021,1:09PM</Header>\r\n                    <Header as='h4' style={{ paddingBottom: '0em', paddingTop: '0em',marginTop:'0.5em',marginBottom:'1em' }}>End:01/05/2021,1:09PM</Header>\r\n                    <Container  textAlign='left'> \r\n                        <p style={{fontSize: '16px', color: '#5f6061'}}>SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.\r\n                        SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.\r\n                        SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.\r\n                        SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.\r\n                        SeeleWallet is a free,\r\n                        client-side interface helping you interact with SeeleChain. \r\n                        Our easy-to-use, open-source platform allows you to generate wallets, \r\n                        interact with smart contracts, and so much more.</p>\r\n                    </Container>\r\n                    <Segment textAlign='center'>\r\n                        <Header as='h4' color= 'teal'>Cast your vote</Header>\r\n                        <Divider/>\r\n                        <Button basic size='large' style={{ width: '50%'}}>Yes-Support</Button>\r\n                        <Spacer/>\r\n                        <Button basic size='large' style={{ width: '50%'}}>No-Not Support</Button>\r\n                        <Spacer/>\r\n                        <Button basic size='large' style={{ width: '50%'}}>No with Veto</Button>\r\n                        <Spacer/>\r\n                        <Button basic size='large' style={{ width: '50%'}}>Abstain</Button>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign='top' width= '6' style={{ paddingBottom: '0.5em', paddingTop: '0.5em' }}>\r\n                    <Segment textAlign='left'>\r\n                        <Header as='h4' color= 'teal'>Current results</Header>\r\n                        <Divider/>\r\n                        <Header as='h4'>Yes-Support</Header>\r\n                        <Progress percent={32} color='green' size='tiny'/>\r\n                        <Header as='h4'>No-Do not support</Header>\r\n                        <Progress percent={50} color='green' size='tiny'/>\r\n                        <Header as='h4'>No with Veto-Do not support</Header>\r\n                        <Progress percent={3} color='green' size='tiny'/>\r\n                        <Header as='h4'>Absyain-Undecided</Header>\r\n                        <Progress percent={2} color='green' size='tiny'/>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        \r\n      </Container>\r\n    </StyledSegment>\r\n  )\r\n}\r\n\r\nexport default Proposal",{"ruleId":"1058","replacedBy":"1059"},{"ruleId":"1060","replacedBy":"1061"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":17,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1067","severity":1,"message":"1068","line":7,"column":1,"nodeType":"1069","endLine":9,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1070","line":5,"column":45,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":53},{"ruleId":"1062","severity":1,"message":"1071","line":5,"column":54,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":67},{"ruleId":"1067","severity":1,"message":"1072","line":15,"column":1,"nodeType":"1069","endLine":22,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1073","line":3,"column":10,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1074","line":3,"column":20,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1074","line":7,"column":20,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1076","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1077","line":3,"column":3,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1078","line":6,"column":3,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1079","line":12,"column":10,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1073","line":13,"column":10,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1074","line":13,"column":20,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1080","line":14,"column":10,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1084","line":42,"column":9,"nodeType":"1064","messageId":"1065","endLine":42,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1086","line":62,"column":3,"nodeType":"1087","endLine":62,"endColumn":9,"suggestions":"1088"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1085","severity":1,"message":"1086","line":58,"column":3,"nodeType":"1087","endLine":58,"endColumn":9,"suggestions":"1089"},{"ruleId":"1058","replacedBy":"1059"},{"ruleId":"1060","replacedBy":"1061"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1067","severity":1,"message":"1090","line":3,"column":1,"nodeType":"1069","endLine":13,"endColumn":2},{"ruleId":"1067","severity":1,"message":"1090","line":13,"column":1,"nodeType":"1069","endLine":31,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1091","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1092","line":13,"column":3,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1093","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1094","line":25,"column":29,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1093","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1095","line":29,"column":21,"nodeType":"1064","messageId":"1065","endLine":29,"endColumn":38},{"ruleId":"1085","severity":1,"message":"1096","line":38,"column":5,"nodeType":"1087","endLine":38,"endColumn":11,"suggestions":"1097"},{"ruleId":"1085","severity":1,"message":"1098","line":136,"column":3,"nodeType":"1087","endLine":136,"endColumn":9,"suggestions":"1099"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1094","line":22,"column":29,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1100","line":9,"column":11,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1101","line":23,"column":10,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1102","line":16,"column":8,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1100","line":17,"column":9,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":17,"column":11,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":19,"column":7,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1105","line":134,"column":3,"nodeType":"1087","endLine":134,"endColumn":9,"suggestions":"1106"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1109","line":14,"column":10,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1110","line":15,"column":9,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1111","line":16,"column":8,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1102","line":17,"column":8,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1100","line":18,"column":9,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":18,"column":11,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1112","line":23,"column":11,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":22},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1104","line":19,"column":7,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1100","line":16,"column":9,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":16,"column":11,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":18,"column":7,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":19,"column":7,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1100","line":16,"column":9,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":16,"column":11,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":16},{"ruleId":"1085","severity":1,"message":"1105","line":147,"column":3,"nodeType":"1087","endLine":147,"endColumn":9,"suggestions":"1113"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1067","severity":1,"message":"1072","line":64,"column":1,"nodeType":"1069","endLine":71,"endColumn":2},{"ruleId":"1058","replacedBy":"1114"},{"ruleId":"1060","replacedBy":"1115"},{"ruleId":"1067","severity":1,"message":"1072","line":64,"column":1,"nodeType":"1069","endLine":71,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1073","line":3,"column":10,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1074","line":3,"column":20,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1104","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":22,"column":7,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1116","line":29,"column":12,"nodeType":"1064","messageId":"1065","endLine":29,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1116","line":27,"column":10,"nodeType":"1064","messageId":"1065","endLine":27,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1084","line":45,"column":9,"nodeType":"1064","messageId":"1065","endLine":45,"endColumn":25},{"ruleId":"1085","severity":1,"message":"1086","line":65,"column":3,"nodeType":"1087","endLine":65,"endColumn":9,"suggestions":"1117"},{"ruleId":"1062","severity":1,"message":"1070","line":5,"column":45,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":53},{"ruleId":"1062","severity":1,"message":"1071","line":5,"column":54,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":67},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1116","line":26,"column":10,"nodeType":"1064","messageId":"1065","endLine":26,"endColumn":11},{"ruleId":"1085","severity":1,"message":"1086","line":60,"column":3,"nodeType":"1087","endLine":60,"endColumn":9,"suggestions":"1118"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":17,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1116","line":103,"column":10,"nodeType":"1064","messageId":"1065","endLine":103,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1100","line":16,"column":9,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":16,"column":11,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1116","line":28,"column":12,"nodeType":"1064","messageId":"1065","endLine":28,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1091","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1092","line":13,"column":3,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1119","line":19,"column":10,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":24},{"ruleId":"1062","severity":1,"message":"1093","line":23,"column":7,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1094","line":27,"column":29,"nodeType":"1064","messageId":"1065","endLine":27,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1116","line":24,"column":10,"nodeType":"1064","messageId":"1065","endLine":24,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1094","line":25,"column":29,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1093","line":22,"column":7,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1116","line":29,"column":12,"nodeType":"1064","messageId":"1065","endLine":29,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1095","line":32,"column":21,"nodeType":"1064","messageId":"1065","endLine":32,"endColumn":38},{"ruleId":"1085","severity":1,"message":"1096","line":41,"column":5,"nodeType":"1087","endLine":41,"endColumn":11,"suggestions":"1120"},{"ruleId":"1085","severity":1,"message":"1098","line":139,"column":3,"nodeType":"1087","endLine":139,"endColumn":9,"suggestions":"1121"},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1102","line":16,"column":8,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1100","line":17,"column":9,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":17,"column":11,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":19,"column":7,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":18},{"ruleId":"1085","severity":1,"message":"1105","line":134,"column":3,"nodeType":"1087","endLine":134,"endColumn":9,"suggestions":"1122"},{"ruleId":"1067","severity":1,"message":"1068","line":7,"column":1,"nodeType":"1069","endLine":9,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1100","line":16,"column":9,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":16,"column":11,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1116","line":23,"column":12,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":13},{"ruleId":"1085","severity":1,"message":"1105","line":150,"column":3,"nodeType":"1087","endLine":150,"endColumn":9,"suggestions":"1123"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1109","line":14,"column":10,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1110","line":15,"column":9,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1111","line":16,"column":8,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1102","line":17,"column":8,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1100","line":18,"column":9,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":18,"column":11,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1112","line":23,"column":11,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":22},{"ruleId":"1058","replacedBy":"1114"},{"ruleId":"1060","replacedBy":"1115"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1074","line":7,"column":20,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1116","line":12,"column":12,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1076","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1077","line":3,"column":3,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1078","line":6,"column":3,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1079","line":12,"column":10,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1073","line":13,"column":10,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1074","line":13,"column":20,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1080","line":14,"column":10,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1116","line":21,"column":10,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1100","line":9,"column":11,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1101","line":23,"column":10,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":25},{"ruleId":"1067","severity":1,"message":"1090","line":3,"column":1,"nodeType":"1069","endLine":13,"endColumn":2},{"ruleId":"1067","severity":1,"message":"1072","line":15,"column":1,"nodeType":"1069","endLine":22,"endColumn":2},{"ruleId":"1067","severity":1,"message":"1090","line":13,"column":1,"nodeType":"1069","endLine":31,"endColumn":2},{"ruleId":"1058","replacedBy":"1124"},{"ruleId":"1060","replacedBy":"1125"},{"ruleId":"1058","replacedBy":"1126"},{"ruleId":"1060","replacedBy":"1127"},{"ruleId":"1067","severity":1,"message":"1072","line":64,"column":1,"nodeType":"1069","endLine":71,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1091","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1092","line":13,"column":3,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1083","line":18,"column":19,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1119","line":22,"column":10,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":24},{"ruleId":"1062","severity":1,"message":"1128","line":23,"column":8,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1093","line":28,"column":7,"nodeType":"1064","messageId":"1065","endLine":28,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1094","line":44,"column":29,"nodeType":"1064","messageId":"1065","endLine":44,"endColumn":35},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1100","line":16,"column":9,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":16,"column":11,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1104","line":20,"column":7,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":21,"column":7,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1116","line":28,"column":12,"nodeType":"1064","messageId":"1065","endLine":28,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":14,"column":19,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1093","line":22,"column":7,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1116","line":29,"column":12,"nodeType":"1064","messageId":"1065","endLine":29,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1095","line":32,"column":21,"nodeType":"1064","messageId":"1065","endLine":32,"endColumn":38},{"ruleId":"1085","severity":1,"message":"1096","line":41,"column":5,"nodeType":"1087","endLine":41,"endColumn":11,"suggestions":"1129"},{"ruleId":"1085","severity":1,"message":"1098","line":139,"column":3,"nodeType":"1087","endLine":139,"endColumn":9,"suggestions":"1130"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1083","line":15,"column":19,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1116","line":26,"column":10,"nodeType":"1064","messageId":"1065","endLine":26,"endColumn":11},{"ruleId":"1085","severity":1,"message":"1086","line":60,"column":3,"nodeType":"1087","endLine":60,"endColumn":9,"suggestions":"1131"},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":3,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":3,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1077","line":11,"column":3,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1116","line":24,"column":10,"nodeType":"1064","messageId":"1065","endLine":24,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1094","line":25,"column":29,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":35},{"ruleId":"1058","replacedBy":"1132"},{"ruleId":"1060","replacedBy":"1133"},{"ruleId":"1067","severity":1,"message":"1068","line":7,"column":1,"nodeType":"1069","endLine":9,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1066","line":3,"column":27,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":32},{"ruleId":"1062","severity":1,"message":"1082","line":3,"column":33,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1074","line":4,"column":20,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1134","line":5,"column":8,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1135","line":2,"column":9,"nodeType":"1064","messageId":"1065","endLine":2,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1136","line":5,"column":9,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1137","line":5,"column":17,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1066","line":5,"column":22,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1078","line":5,"column":28,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":32},{"ruleId":"1062","severity":1,"message":"1138","line":5,"column":34,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":43},{"ruleId":"1062","severity":1,"message":"1070","line":5,"column":45,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":53},{"ruleId":"1062","severity":1,"message":"1071","line":5,"column":54,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":67},{"ruleId":"1062","severity":1,"message":"1139","line":5,"column":68,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":75},{"ruleId":"1062","severity":1,"message":"1140","line":5,"column":76,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":88},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1134","line":7,"column":8,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1141","line":8,"column":8,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1142","line":9,"column":8,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1143","line":30,"column":7,"nodeType":"1064","messageId":"1065","endLine":30,"endColumn":20},{"ruleId":"1058","replacedBy":"1126"},{"ruleId":"1060","replacedBy":"1127"},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1144","line":18,"column":8,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1100","line":9,"column":11,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1101","line":23,"column":10,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1076","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1077","line":3,"column":3,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1078","line":6,"column":3,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1079","line":12,"column":10,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1073","line":13,"column":10,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1074","line":13,"column":20,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1080","line":14,"column":10,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1116","line":21,"column":10,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":11},{"ruleId":"1062","severity":1,"message":"1138","line":4,"column":20,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":29},{"ruleId":"1062","severity":1,"message":"1070","line":4,"column":31,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":39},{"ruleId":"1062","severity":1,"message":"1145","line":4,"column":62,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":79},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1074","line":7,"column":20,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1128","line":9,"column":8,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1146","line":9,"column":14,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":28},{"ruleId":"1062","severity":1,"message":"1147","line":14,"column":7,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1116","line":158,"column":12,"nodeType":"1064","messageId":"1065","endLine":158,"endColumn":13},{"ruleId":"1067","severity":1,"message":"1090","line":3,"column":1,"nodeType":"1069","endLine":13,"endColumn":2},{"ruleId":"1067","severity":1,"message":"1072","line":15,"column":1,"nodeType":"1069","endLine":22,"endColumn":2},{"ruleId":"1067","severity":1,"message":"1090","line":13,"column":1,"nodeType":"1069","endLine":31,"endColumn":2},{"ruleId":"1062","severity":1,"message":"1136","line":4,"column":5,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1144","line":25,"column":7,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1136","line":4,"column":9,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1137","line":5,"column":5,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1066","line":6,"column":5,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1138","line":8,"column":5,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1070","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1071","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1139","line":11,"column":5,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1140","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1148","line":14,"column":11,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1149","line":19,"column":9,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":20},{"ruleId":"1062","severity":1,"message":"1144","line":25,"column":7,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1149","line":20,"column":9,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":20},{"ruleId":"1062","severity":1,"message":"1144","line":26,"column":7,"nodeType":"1064","messageId":"1065","endLine":26,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1149","line":20,"column":9,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":20},{"ruleId":"1062","severity":1,"message":"1144","line":26,"column":7,"nodeType":"1064","messageId":"1065","endLine":26,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":5,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1149","line":19,"column":9,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":20},{"ruleId":"1062","severity":1,"message":"1144","line":25,"column":7,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1136","line":3,"column":9,"nodeType":"1064","messageId":"1065","endLine":3,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1137","line":4,"column":5,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1066","line":5,"column":5,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":6,"column":5,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1138","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1070","line":8,"column":5,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1071","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1139","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1140","line":11,"column":5,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1066","line":4,"column":14,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1108","line":4,"column":73,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":78},{"ruleId":"1062","severity":1,"message":"1150","line":4,"column":79,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":85},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1074","line":7,"column":20,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1116","line":49,"column":12,"nodeType":"1064","messageId":"1065","endLine":49,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1151","line":50,"column":12,"nodeType":"1064","messageId":"1065","endLine":50,"endColumn":22},{"ruleId":"1062","severity":1,"message":"1152","line":51,"column":11,"nodeType":"1064","messageId":"1065","endLine":51,"endColumn":26},{"ruleId":"1062","severity":1,"message":"1153","line":52,"column":11,"nodeType":"1064","messageId":"1065","endLine":52,"endColumn":34},{"ruleId":"1062","severity":1,"message":"1063","line":1,"column":15,"nodeType":"1064","messageId":"1065","endLine":1,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1135","line":2,"column":9,"nodeType":"1064","messageId":"1065","endLine":2,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1154","line":4,"column":8,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1136","line":5,"column":9,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1137","line":5,"column":17,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":21},{"ruleId":"1062","severity":1,"message":"1066","line":5,"column":22,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1078","line":5,"column":28,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":32},{"ruleId":"1062","severity":1,"message":"1138","line":5,"column":34,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":43},{"ruleId":"1062","severity":1,"message":"1070","line":5,"column":45,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":53},{"ruleId":"1062","severity":1,"message":"1071","line":5,"column":54,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":67},{"ruleId":"1062","severity":1,"message":"1139","line":5,"column":68,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":75},{"ruleId":"1062","severity":1,"message":"1140","line":5,"column":76,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":88},{"ruleId":"1062","severity":1,"message":"1075","line":6,"column":9,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1134","line":7,"column":8,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1141","line":8,"column":8,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1142","line":9,"column":8,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1155","line":12,"column":8,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1074","line":4,"column":20,"nodeType":"1064","messageId":"1065","endLine":4,"endColumn":37},{"ruleId":"1062","severity":1,"message":"1119","line":5,"column":10,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":24},{"ruleId":"1062","severity":1,"message":"1128","line":6,"column":8,"nodeType":"1064","messageId":"1065","endLine":6,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1066","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":10,"column":5,"nodeType":"1064","messageId":"1065","endLine":10,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1138","line":11,"column":5,"nodeType":"1064","messageId":"1065","endLine":11,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1071","line":13,"column":5,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1139","line":14,"column":5,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1140","line":15,"column":5,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1156","line":16,"column":8,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1107","line":8,"column":5,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1135","line":15,"column":11,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1157","line":20,"column":10,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1128","line":22,"column":10,"nodeType":"1064","messageId":"1065","endLine":22,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":5,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1066","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1137","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":13,"column":5,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1135","line":15,"column":11,"nodeType":"1064","messageId":"1065","endLine":15,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1158","line":18,"column":10,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1159","line":19,"column":10,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1128","line":21,"column":10,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1081","line":5,"column":5,"nodeType":"1064","messageId":"1065","endLine":5,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1066","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1135","line":13,"column":11,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1158","line":16,"column":10,"nodeType":"1064","messageId":"1065","endLine":16,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1159","line":17,"column":10,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1128","line":19,"column":10,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1135","line":12,"column":11,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1160","line":13,"column":10,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1128","line":18,"column":10,"nodeType":"1064","messageId":"1065","endLine":18,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1128","line":19,"column":10,"nodeType":"1064","messageId":"1065","endLine":19,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1066","line":7,"column":5,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1107","line":8,"column":5,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1078","line":9,"column":5,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1137","line":12,"column":5,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":9},{"ruleId":"1062","severity":1,"message":"1108","line":13,"column":5,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1135","line":17,"column":11,"nodeType":"1064","messageId":"1065","endLine":17,"endColumn":15},{"ruleId":"1062","severity":1,"message":"1158","line":20,"column":10,"nodeType":"1064","messageId":"1065","endLine":20,"endColumn":19},{"ruleId":"1062","severity":1,"message":"1159","line":21,"column":10,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":17},{"ruleId":"1062","severity":1,"message":"1128","line":23,"column":10,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":14},{"ruleId":"1062","severity":1,"message":"1082","line":7,"column":3,"nodeType":"1064","messageId":"1065","endLine":7,"endColumn":7},{"ruleId":"1062","severity":1,"message":"1066","line":8,"column":3,"nodeType":"1064","messageId":"1065","endLine":8,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1107","line":9,"column":3,"nodeType":"1064","messageId":"1065","endLine":9,"endColumn":8},{"ruleId":"1062","severity":1,"message":"1091","line":12,"column":3,"nodeType":"1064","messageId":"1065","endLine":12,"endColumn":13},{"ruleId":"1062","severity":1,"message":"1092","line":13,"column":3,"nodeType":"1064","messageId":"1065","endLine":13,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1161","line":14,"column":3,"nodeType":"1064","messageId":"1065","endLine":14,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1083","line":21,"column":19,"nodeType":"1064","messageId":"1065","endLine":21,"endColumn":27},{"ruleId":"1062","severity":1,"message":"1102","line":23,"column":8,"nodeType":"1064","messageId":"1065","endLine":23,"endColumn":25},{"ruleId":"1062","severity":1,"message":"1100","line":24,"column":9,"nodeType":"1064","messageId":"1065","endLine":24,"endColumn":10},{"ruleId":"1062","severity":1,"message":"1103","line":24,"column":11,"nodeType":"1064","messageId":"1065","endLine":24,"endColumn":16},{"ruleId":"1062","severity":1,"message":"1119","line":25,"column":10,"nodeType":"1064","messageId":"1065","endLine":25,"endColumn":24},{"ruleId":"1062","severity":1,"message":"1128","line":26,"column":8,"nodeType":"1064","messageId":"1065","endLine":26,"endColumn":12},{"ruleId":"1062","severity":1,"message":"1104","line":30,"column":7,"nodeType":"1064","messageId":"1065","endLine":30,"endColumn":23},{"ruleId":"1062","severity":1,"message":"1093","line":31,"column":7,"nodeType":"1064","messageId":"1065","endLine":31,"endColumn":18},{"ruleId":"1062","severity":1,"message":"1162","line":53,"column":12,"nodeType":"1064","messageId":"1065","endLine":53,"endColumn":16},"no-native-reassign",["1163"],"no-negated-in-lhs",["1164"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Dropdown' is defined but never used.","'MenuItemProps' is defined but never used.","Assign object to a variable before exporting as module default","'isMobile' is defined but never used.","'isScreen750to1440' is defined but never used.","'Media' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'HeaderEmptyPanel' is defined but never used.","'addPrefixForHash' is defined but never used.","'Grid' is defined but never used.","'List' is defined but never used.","'useTimer' is defined but never used.","'handlePageChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'setUrl'. Either include it or remove the dependency array.","ArrayExpression",["1165"],["1166"],"Unexpected default export of anonymous function","'Pagination' is defined but never used.","'PaginationProps' is defined but never used.","'blockbefore' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'requestFetchBlock' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setUrl'. Either include it or remove the dependency array.",["1167"],"React Hook React.useMemo has a missing dependency: 'blockTableBodyRender'. Either include it or remove the dependency array.",["1168"],"'_' is defined but never used.","'sumTotalDeposit' is defined but never used.","'ValidatorTableRow' is defined but never used.","'empty' is defined but never used.","'PAGE_SIZE' is assigned a value but never used.","React Hook React.useMemo has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array.",["1169"],"'Table' is defined but never used.","'Label' is defined but never used.","'useParams' is defined but never used.","'useFetch' is defined but never used.","'constants' is defined but never used.","'RouteParams' is defined but never used.",["1170"],["1163"],["1164"],"'t' is assigned a value but never used.",["1171"],["1172"],"'useTranslation' is defined but never used.",["1173"],["1174"],["1175"],["1176"],["1163"],["1164"],["1163"],["1164"],"'i18n' is defined but never used.",["1177"],["1178"],["1179"],["1163"],["1164"],"'logo' is defined but never used.","'Link' is defined but never used.","'Segment' is defined but never used.","'Menu' is defined but never used.","'Container' is defined but never used.","'Sidebar' is defined but never used.","'SidebarProps' is defined but never used.","'AppMenu' is defined but never used.","'PageHeader' is defined but never used.","'StyledContent' is assigned a value but never used.","'StyledLink' is assigned a value but never used.","'DropdownItemProps' is defined but never used.","'changeLanguage' is defined but never used.","'StyledFooter' is assigned a value but never used.","'color' is assigned a value but never used.","'StyledImage' is assigned a value but never used.","'Header' is defined but never used.","'activeItem' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","'handleDropdownItemClick' is assigned a value but never used.","'PropTypes' is defined but never used.","'Footer' is defined but never used.","'TopMenu' is defined but never used.","'switchimg' is defined but never used.","'seelelogo' is defined but never used.","'snplogo' is defined but never used.","'styled' is defined but never used.","'Statistic' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1180","fix":"1181"},{"desc":"1180","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1187","fix":"1189"},{"desc":"1180","fix":"1190"},{"desc":"1180","fix":"1191"},{"desc":"1183","fix":"1192"},{"desc":"1185","fix":"1193"},{"desc":"1187","fix":"1194"},{"desc":"1187","fix":"1195"},{"desc":"1183","fix":"1196"},{"desc":"1185","fix":"1197"},{"desc":"1180","fix":"1198"},"Update the dependencies array to be: [data?.data?.Data?.Total, setUrl]",{"range":"1199","text":"1200"},{"range":"1201","text":"1200"},"Update the dependencies array to be: [data, setUrl]",{"range":"1202","text":"1203"},"Update the dependencies array to be: [blockTableBodyRender, data.data.Data.account_address, data.data.Data.commission_rate, data.data.Data.delegator_shares, data.data.Data.moniker, data.data.Data.operator_address, data.data.Data.tokens, data.data.Data.voting_power]",{"range":"1204","text":"1205"},"Update the dependencies array to be: []",{"range":"1206","text":"1207"},{"range":"1208","text":"1207"},{"range":"1209","text":"1200"},{"range":"1210","text":"1200"},{"range":"1211","text":"1203"},{"range":"1212","text":"1205"},{"range":"1213","text":"1207"},{"range":"1214","text":"1207"},{"range":"1215","text":"1203"},{"range":"1216","text":"1205"},{"range":"1217","text":"1200"},[1918,1924],"[data?.data?.Data?.Total, setUrl]",[1882,1888],[1039,1045],"[data, setUrl]",[5657,5663],"[blockTableBodyRender, data.data.Data.account_address, data.data.Data.commission_rate, data.data.Data.delegator_shares, data.data.Data.moniker, data.data.Data.operator_address, data.data.Data.tokens, data.data.Data.voting_power]",[6282,6288],"[]",[7684,7690],[2032,2038],[1997,2003],[1158,1164],[6004,6010],[6282,6288],[8443,8449],[1158,1164],[6004,6010],[1997,2003]]